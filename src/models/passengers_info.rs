/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */

/// PassengersInfo : Summary of all informations needed for work with passengers.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PassengersInfo {
    #[serde(rename = "passengers")]
    pub passengers: Vec<crate::models::Passenger>,
    /// Required fields for 1st passenger (returns only if tickets is editable)
    #[serde(rename = "firstPassengerData")]
    pub first_passenger_data: Vec<crate::models::PersonalDataType>,
    /// Required fields for all others passengers (returns only if tickets is editable)
    #[serde(rename = "otherPassengersData")]
    pub other_passengers_data: Vec<crate::models::PersonalDataType>,
    /// Administrative charge for user information change (in ticket currency)
    #[serde(rename = "changeCharge")]
    pub change_charge: f32,
}

impl PassengersInfo {
    /// Summary of all informations needed for work with passengers.
    pub fn new(passengers: Vec<crate::models::Passenger>, first_passenger_data: Vec<crate::models::PersonalDataType>, other_passengers_data: Vec<crate::models::PersonalDataType>, change_charge: f32) -> PassengersInfo {
        PassengersInfo {
            passengers,
            first_passenger_data,
            other_passengers_data,
            change_charge,
        }
    }
}


