/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Station {
    /// Station identifier
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "fullname")]
    pub fullname: String,
    /// City nickname or aliases (Bratislava --> Blava)
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<Vec<String>>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "stationsTypes", skip_serializing_if = "Option::is_none")]
    pub stations_types: Option<Vec<String>>,
    #[serde(rename = "iataCode", skip_serializing_if = "Option::is_none")]
    pub iata_code: Option<String>,
    #[serde(rename = "stationUrl", skip_serializing_if = "Option::is_none")]
    pub station_url: Option<String>,
    #[serde(rename = "stationTimeZoneCode", skip_serializing_if = "Option::is_none")]
    pub station_time_zone_code: Option<String>,
    #[serde(rename = "wheelChairPlatform", skip_serializing_if = "Option::is_none")]
    pub wheel_chair_platform: Option<String>,
    /// Station significancion (for example: for city Brno, there is Grand station more significant than Bohunice station)
    #[serde(rename = "significance")]
    pub significance: i32,
    /// GPS - longitude
    #[serde(rename = "longitude", skip_serializing_if = "Option::is_none")]
    pub longitude: Option<f32>,
    /// GPS - latitude
    #[serde(rename = "latitude", skip_serializing_if = "Option::is_none")]
    pub latitude: Option<f32>,
    /// Station picture URL (for example: may contain detail information about transfer)
    #[serde(rename = "imageUrl", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
}

impl Station {
    pub fn new(id: i64, name: String, fullname: String, significance: i32) -> Station {
        Station {
            id,
            name,
            fullname,
            aliases: None,
            address: None,
            stations_types: None,
            iata_code: None,
            station_url: None,
            station_time_zone_code: None,
            wheel_chair_platform: None,
            significance,
            longitude: None,
            latitude: None,
            image_url: None,
        }
    }
}


