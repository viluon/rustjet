/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FormQuestion {
    /// Question identifier. If empty form wont be send to server during saving (for example: static elements without customer entry)
    #[serde(rename = "questionId")]
    pub question_id: i32,
    #[serde(rename = "type")]
    pub _type: crate::models::FormQuestionType,
    /// Qustion title, text paragraph or form title
    #[serde(rename = "text")]
    pub text: String,
    /// Text fields watermark
    #[serde(rename = "watermark", skip_serializing_if = "Option::is_none")]
    pub watermark: Option<String>,
    /// List of options (only if there is select option type)
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<crate::models::FormAnswer>>,
}

impl FormQuestion {
    pub fn new(question_id: i32, _type: crate::models::FormQuestionType, text: String) -> FormQuestion {
        FormQuestion {
            question_id,
            _type,
            text,
            watermark: None,
            options: None,
        }
    }
}


