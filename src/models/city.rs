/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct City {
    /// City identifier
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "name")]
    pub name: String,
    /// City nickname or aliases (Bratislava --> Blava)
    #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
    pub aliases: Option<Vec<String>>,
    #[serde(rename = "stationsTypes", skip_serializing_if = "Option::is_none")]
    pub stations_types: Option<Vec<String>>,
    #[serde(rename = "stations")]
    pub stations: Vec<crate::models::Station>,
}

impl City {
    pub fn new(id: i64, name: String, stations: Vec<crate::models::Station>) -> City {
        City {
            id,
            name,
            aliases: None,
            stations_types: None,
            stations,
        }
    }
}


