/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TicketSection {
    #[serde(rename = "section")]
    pub section: Box<crate::models::Section>,
    /// TRUE => seat reservation; FALSE => seat choosed while boarding
    #[serde(rename = "fixedSeatReservation")]
    pub fixed_seat_reservation: bool,
    #[serde(rename = "selectedSeats")]
    pub selected_seats: Vec<crate::models::SelectedSeat>,
    #[serde(rename = "vehicles", skip_serializing_if = "Option::is_none")]
    pub vehicles: Option<Vec<crate::models::Vehicle>>,
}

impl TicketSection {
    pub fn new(section: crate::models::Section, fixed_seat_reservation: bool, selected_seats: Vec<crate::models::SelectedSeat>) -> TicketSection {
        TicketSection {
            section: Box::new(section),
            fixed_seat_reservation,
            selected_seats,
            vehicles: None,
        }
    }
}


