/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */

/// Transfer : Informations about individual transfers (transfer order coincides with individual section order => 1st transfer is between 1st and 2nd section...). calculatedTransferTime is calculated tranfer time in minutes (departure time - arrival time), determinedTransferTime is used time in minutes needed for transfer.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Transfer {
    /// Station ID from which customer needs to transfer
    #[serde(rename = "fromStationId")]
    pub from_station_id: i64,
    /// Station ID to which customer needs to transfer
    #[serde(rename = "toStationId")]
    pub to_station_id: i64,
    #[serde(rename = "type")]
    pub _type: crate::models::TransferType,
    #[serde(rename = "calculatedTransferTime")]
    pub calculated_transfer_time: Box<crate::models::TimePeriod>,
    #[serde(rename = "determinedTransferTime", skip_serializing_if = "Option::is_none")]
    pub determined_transfer_time: Option<Box<crate::models::TimePeriod>>,
    /// Transfer specification
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl Transfer {
    /// Informations about individual transfers (transfer order coincides with individual section order => 1st transfer is between 1st and 2nd section...). calculatedTransferTime is calculated tranfer time in minutes (departure time - arrival time), determinedTransferTime is used time in minutes needed for transfer.
    pub fn new(from_station_id: i64, to_station_id: i64, _type: crate::models::TransferType, calculated_transfer_time: crate::models::TimePeriod) -> Transfer {
        Transfer {
            from_station_id,
            to_station_id,
            _type,
            calculated_transfer_time: Box::new(calculated_transfer_time),
            determined_transfer_time: None,
            description: None,
        }
    }
}


