/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// Used as account ID for login
    #[serde(rename = "accountCode", skip_serializing_if = "Option::is_none")]
    pub account_code: Option<String>,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "surname", skip_serializing_if = "Option::is_none")]
    pub surname: Option<String>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    /// Restrict phone number for work with sms.
    #[serde(rename = "restrictPhoneNumbers", skip_serializing_if = "Option::is_none")]
    pub restrict_phone_numbers: Option<bool>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "mojeid", skip_serializing_if = "Option::is_none")]
    pub mojeid: Option<String>,
    /// Account balance
    #[serde(rename = "credit", skip_serializing_if = "Option::is_none")]
    pub credit: Option<f32>,
    /// Difference between registered credit account with price advantage and regular unregistered open account
    #[serde(rename = "creditPrice", skip_serializing_if = "Option::is_none")]
    pub credit_price: Option<bool>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<crate::models::Currency>,
    /// Set tariff which would be pre-filled after login
    #[serde(rename = "defaultTariffKey", skip_serializing_if = "Option::is_none")]
    pub default_tariff_key: Option<String>,
    #[serde(rename = "notifications", skip_serializing_if = "Option::is_none")]
    pub notifications: Option<Box<crate::models::Notifications>>,
    #[serde(rename = "companyInformation", skip_serializing_if = "Option::is_none")]
    pub company_information: Option<bool>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<Box<crate::models::Company>>,
    /// Acceptance of transport conditions and personal data protection
    #[serde(rename = "conditionsAcceptance", skip_serializing_if = "Option::is_none")]
    pub conditions_acceptance: Option<bool>,
    /// NULL for normal customer, internal number for Regiojet employee
    #[serde(rename = "employeeNumber", skip_serializing_if = "Option::is_none")]
    pub employee_number: Option<i32>,
}

impl User {
    pub fn new() -> User {
        User {
            id: None,
            account_code: None,
            first_name: None,
            surname: None,
            phone_number: None,
            restrict_phone_numbers: None,
            email: None,
            mojeid: None,
            credit: None,
            credit_price: None,
            currency: None,
            default_tariff_key: None,
            notifications: None,
            company_information: None,
            company: None,
            conditions_acceptance: None,
            employee_number: None,
        }
    }
}


