/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */

/// CancelCharge : Cancel charge (fixed orientation amount which can be differ in rounding of amount stated on account with cancel)



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CancelCharge {
    /// Cancel charge description
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// Amount in CZK/EUR currency from ticket/addon/... which wont be refunded.
    #[serde(rename = "amount")]
    pub amount: f32,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<crate::models::Currency>,
    /// How many % from origin amount will be get rid of
    #[serde(rename = "percent", skip_serializing_if = "Option::is_none")]
    pub percent: Option<i32>,
}

impl CancelCharge {
    /// Cancel charge (fixed orientation amount which can be differ in rounding of amount stated on account with cancel)
    pub fn new(amount: f32) -> CancelCharge {
        CancelCharge {
            message: None,
            amount,
            currency: None,
            percent: None,
        }
    }
}


