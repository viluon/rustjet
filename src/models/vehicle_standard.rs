/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */

/// VehicleStandard : Vehicle standards description and available services



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VehicleStandard {
    /// Enum.name
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "imageUrl")]
    pub image_url: String,
    /// Picture of standards available in support vehicle URL
    #[serde(rename = "supportImageUrl")]
    pub support_image_url: String,
    /// Photogallery of standards URL
    #[serde(rename = "galleryUrl", skip_serializing_if = "Option::is_none")]
    pub gallery_url: Option<String>,
}

impl VehicleStandard {
    /// Vehicle standards description and available services
    pub fn new(key: String, name: String, description: String, image_url: String, support_image_url: String) -> VehicleStandard {
        VehicleStandard {
            key,
            name,
            description,
            image_url,
            support_image_url,
            gallery_url: None,
        }
    }
}


