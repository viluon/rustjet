/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TimeTicketCheckinInfo {
    /// Response message.
    #[serde(rename = "message")]
    pub message: String,
    /// Client account code which represents number of ticket.
    #[serde(rename = "accountCode")]
    pub account_code: String,
    /// Identifier of the time ticket.
    #[serde(rename = "timeTicketId")]
    pub time_ticket_id: i64,
    #[serde(rename = "state")]
    pub state: crate::models::TicketState,
    /// Identifier of the departure station.
    #[serde(rename = "fromStationId", skip_serializing_if = "Option::is_none")]
    pub from_station_id: Option<i64>,
    /// Identifier of the arrival station.
    #[serde(rename = "toStationId", skip_serializing_if = "Option::is_none")]
    pub to_station_id: Option<i64>,
    #[serde(rename = "tariff")]
    pub tariff: Box<crate::models::Tariff>,
    /// Name and surname of passenger.
    #[serde(rename = "nameAndSurname")]
    pub name_and_surname: String,
    #[serde(rename = "seatClassCode")]
    pub seat_class_code: Box<crate::models::SeatClass>,
}

impl TimeTicketCheckinInfo {
    pub fn new(message: String, account_code: String, time_ticket_id: i64, state: crate::models::TicketState, tariff: crate::models::Tariff, name_and_surname: String, seat_class_code: crate::models::SeatClass) -> TimeTicketCheckinInfo {
        TimeTicketCheckinInfo {
            message,
            account_code,
            time_ticket_id,
            state,
            from_station_id: None,
            to_station_id: None,
            tariff: Box::new(tariff),
            name_and_surname,
            seat_class_code: Box::new(seat_class_code),
        }
    }
}


