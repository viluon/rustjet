/*
 * RegioJet API
 *
 * A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developers@studentagency.cz
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AvailableAddon {
    #[serde(rename = "addonId")]
    pub addon_id: i64,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "iconUrl")]
    pub icon_url: String,
    #[serde(rename = "infoUrl", skip_serializing_if = "Option::is_none")]
    pub info_url: Option<String>,
    #[serde(rename = "infoUrlLabel", skip_serializing_if = "Option::is_none")]
    pub info_url_label: Option<String>,
    #[serde(rename = "price")]
    pub price: f32,
    #[serde(rename = "currency")]
    pub currency: crate::models::Currency,
    /// Maximal amount of current addon in one order. If no limit is set, this addon will be limitless
    #[serde(rename = "maxCount", skip_serializing_if = "Option::is_none")]
    pub max_count: Option<i32>,
    #[serde(rename = "conditions")]
    pub conditions: Box<crate::models::AvailableAddonConditions>,
}

impl AvailableAddon {
    pub fn new(addon_id: i64, name: String, description: String, icon_url: String, price: f32, currency: crate::models::Currency, conditions: crate::models::AvailableAddonConditions) -> AvailableAddon {
        AvailableAddon {
            addon_id,
            name,
            description,
            icon_url,
            info_url: None,
            info_url_label: None,
            price,
            currency,
            max_count: None,
            conditions: Box::new(conditions),
        }
    }
}


