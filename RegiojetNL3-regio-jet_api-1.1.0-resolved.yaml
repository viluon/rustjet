---
swagger: "2.0"
info:
  description: A set of endpoints to interact with RegioJet transport services. Search for connections, book tickets, see the list of served stations and more. All endpoints consume and produce JSON strings, with the exception of ticket printing (/tickets/{ticketId}/print) that produce printable HTML code.
  version: 1.1.0
  title: RegioJet API
  contact:
    email: developers@studentagency.cz
host: dpl-qa-ybus-privapi.sa.cz
basePath: /restapi
tags:
- name: Users
  description: User account related operations
- name: Routes
  description: Routes search
- name: Tickets
  description: Ticket related operations
- name: Payments
  description: Payment operations
- name: Discounts
  description: Discount operations
- name: Addons
  description: Addons operations
- name: Others
  description: Others
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /routes/search:
    get:
      tags:
      - Routes
      summary: Get collection of all routes that satisfy specified search criteria for the route.
      description: Authorization not required (filtres info bubbles)
      operationId: searchRoutes
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: fromLocationId
        in: query
        required: true
        type: integer
        format: int64
      - name: fromLocationType
        in: query
        required: true
        type: string
        enum:
        - CITY
        - STATION
      - name: toLocationId
        in: query
        required: true
        type: integer
        format: int64
      - name: toLocationType
        in: query
        required: true
        type: string
        enum:
        - CITY
        - STATION
      - name: departureTime
        in: query
        description: Departure date-time
        required: false
        type: string
        default: now()
        format: date-time
      - name: tariffs
        in: query
        description: Ticket tariff
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        default: REGULAR
      - name: actionPrice
        in: query
        description: Code indication of a current marketing action. Filtres searched routes on current marketing action. List of all marketing action for current route included in endpoint /consts/actionPrices.
        required: false
        type: string
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Route search successfully finished
          schema:
            $ref: '#/definitions/SearchResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: No routes found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /routes/search/simple:
    get:
      tags:
      - Routes
      summary: Get collection of all routes that satisfy specified search criteria for the route.
      description: Authorization not required (filtres info bubbles)
      operationId: simpleSearchRoutes
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: X-Used-DepartureFromDateTime
        in: header
        description: Used for repeatable move FORWARD/BACKWARD. Bears FROM date-time value used for previous route search (response returned in header)
        required: false
        type: string
        format: date-time
      - name: X-Used-DepartureToDateTime
        in: header
        description: Used for repeatable move FORWARD/BACKWARD. Bears TO date-time value used for previous route search (response returned in header)
        required: false
        type: string
        format: date-time
      - name: fromLocationId
        in: query
        required: true
        type: integer
        format: int64
      - name: fromLocationType
        in: query
        required: true
        type: string
        enum:
        - CITY
        - STATION
      - name: toLocationId
        in: query
        required: true
        type: integer
        format: int64
      - name: toLocationType
        in: query
        required: true
        type: string
        enum:
        - CITY
        - STATION
      - name: departureDate
        in: query
        description: Departure date
        required: false
        type: string
        default: now()
        format: date
      - name: tariffs
        in: query
        description: Ticket tariff
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        default: REGULAR
      - name: actionPrice
        in: query
        description: Code indication of a current marketing action. Filtres searched routes on current marketing action. List of all marketing action for current route included in endpoint /consts/actionPrices.
        required: false
        type: string
      - name: move
        in: query
        description: Move search FORWARD/BACKWARD
        required: false
        type: string
        enum:
        - BACKWARD
        - FORWARD
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Route search successfully finished
          headers:
            X-Used-DepartureFromDateTime:
              type: string
              format: date-time
              description: Used FROM date value for route search (after applied next/previous connection request).
            X-Used-DepartureToDateTime:
              type: string
              format: date-time
              description: Used TO date value for route search (after applied next/previous connection request).
          schema:
            $ref: '#/definitions/SimpleSearchResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: No routes found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /routes/{routeId}/simple:
    get:
      tags:
      - Routes
      summary: Get detail for the given route.
      operationId: getSimpleRouteDetail
      parameters:
      - name: routeId
        in: path
        description: 'ID of the route that contains IDs of sections separed by , (example: section0.id,section1.id, ... sectionx.id)'
        required: true
        type: string
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: fromStationId
        in: query
        required: true
        type: integer
        format: int64
      - name: toStationId
        in: query
        required: true
        type: integer
        format: int64
      - name: tariffs
        in: query
        description: Ticket tariff
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        default: REGULAR
      responses:
        "200":
          description: Seats reservation status successfully loaded
          schema:
            $ref: '#/definitions/Route'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /routes/{stationId}/departures:
    get:
      tags:
      - Routes
      summary: Get arrivals and departures for the given station.
      operationId: getDepartures
      parameters:
      - name: stationId
        in: path
        description: ID of the station
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: limit
        in: query
        description: Maximal count of returned objects. Default value is 19.
        required: false
        type: integer
        default: 19
      responses:
        "200":
          description: Departures search successfully finished
          schema:
            $ref: '#/definitions/ArrivalDepartureConnection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /routes/{routeId}/passengersData:
    post:
      tags:
      - Routes
      summary: Get mandatory data of  first passenger and others passengers for the given route.
      operationId: getPassengersData
      parameters:
      - name: routeId
        in: path
        description: 'ID of the route that contains IDs of sections separed by , (example: section0.id,section1.id, ... sectionx.id)'
        required: true
        type: string
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: filter
        required: true
        schema:
          $ref: '#/definitions/PassengersDataRequest'
      responses:
        "200":
          description: Seats reservation status successfully loaded
          schema:
            $ref: '#/definitions/PassengersDataResponse'
  /routes/{routeId}/freeSeats:
    post:
      tags:
      - Routes
      summary: Get route tandem free seats group by vehicle
      operationId: getRouteFreeSeats
      parameters:
      - name: routeId
        in: path
        description: 'ID of the route that contains IDs of sections separed by , (example: section0.id,section1.id, ... sectionx.id)'
        required: true
        type: string
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        description: Descriptions of the Route detail
        required: true
        schema:
          $ref: '#/definitions/RouteSeatsRequest'
      responses:
        "200":
          description: Route seats info successfully loaded
          schema:
            $ref: '#/definitions/RouteSeatsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets:
    get:
      tags:
      - Tickets
      summary: Get all tickets of the user
      operationId: getAllTickets
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: limit
        in: query
        description: Page size limit (states how many records should return).
        required: false
        type: integer
        default: 10
      - name: offset
        in: query
        description: Page number (value must be dividable by limit).
        required: false
        type: integer
        default: 0
      - name: departureFrom
        in: query
        description: Filtres tickets with departure date higher than
        required: false
        type: string
        format: date-time
      - name: departureTo
        in: query
        description: Filtres tickets with departure date lower than
        required: false
        type: string
        format: date-time
      - name: arrivalFrom
        in: query
        description: Filtres tickets with arrival date higher than
        required: false
        type: string
        format: date-time
      - name: arrivalTo
        in: query
        description: Filtres tickets with arrival date lower than
        required: false
        type: string
        format: date-time
      - name: ticketStates
        in: query
        description: Filtres tickets by state (UNPAID, VALID, USED)
        required: false
        type: array
        items:
          type: string
          enum:
          - UNPAID
          - VALID
          - USED
        collectionFormat: multi
        uniqueItems: true
      - name: sortProperty
        in: query
        description: Sort property name
        required: false
        type: string
        default: DEPARTURE
        enum:
        - BOOKING_TIME
        - CODE
        - DEPARTURE
        - EXPIRATION
        - PAID_TIME
      - name: sortDirection
        in: query
        description: Sorting direction
        required: false
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
      - name: simple
        in: query
        description: Get simplification of the tickets
        required: false
        type: boolean
        default: false
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: All user's tickets successfully loaded
          headers:
            X-Pagination-Total:
              type: integer
              description: Number of elements honouring filter criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{accountCode}/affiliate:
    get:
      tags:
      - Tickets
      summary: Get all tickets of the user for affiliate partner
      operationId: getAllTicketsForAffiliate
      parameters:
      - name: accountCode
        in: path
        description: Text code identifying a customer's account.
        required: true
        type: string
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: limit
        in: query
        description: Page size limit (states how many records should return).
        required: false
        type: integer
        default: 10
      - name: offset
        in: query
        description: Page number (value must be dividable by limit).
        required: false
        type: integer
        default: 0
      - name: departureFrom
        in: query
        description: Filtres tickets with departure date lower than
        required: false
        type: string
        format: date-time
      - name: departureTo
        in: query
        description: Filtres tickets with departure date lower than
        required: false
        type: string
        format: date-time
      - name: arrivalFrom
        in: query
        description: Filtres tickets with arrival date higher than
        required: false
        type: string
        format: date-time
      - name: arrivalTo
        in: query
        description: Filtres tickets with arrival date lower than
        required: false
        type: string
        format: date-time
      - name: ticketStates
        in: query
        description: Filtres tickets by state (UNPAID, VALID, USED)
        required: false
        type: array
        items:
          type: string
          enum:
          - UNPAID
          - VALID
          - USED
        collectionFormat: multi
        uniqueItems: true
      - name: sortProperty
        in: query
        description: Sort property name
        required: false
        type: string
        default: DEPARTURE
        enum:
        - BOOKING_TIME
        - CODE
        - DEPARTURE
        - EXPIRATION
        - PAID_TIME
      - name: sortDirection
        in: query
        description: Sorting direction
        required: false
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
      security:
      - BasicAuth: []
      responses:
        "200":
          description: All user's tickets successfully loaded
          headers:
            X-Pagination-Total:
              type: integer
              description: Number of elements honouring filter criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/unpaid:
    get:
      tags:
      - Tickets
      summary: Get unpaid tickets (and tickets with remaining items to pay) of the user.
      operationId: getUnpaidTickets
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: sortProperty
        in: query
        description: Sort property name
        required: false
        type: string
        default: DEPARTURE
        enum:
        - BOOKING_TIME
        - CODE
        - DEPARTURE
        - EXPIRATION
        - PAID_TIME
      - name: sortDirection
        in: query
        description: Sorting direction
        required: false
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Unpaid user's tickets successfully loaded
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/create/unregistered:
    post:
      tags:
      - Tickets
      summary: Create new ticket(s) for new account
      operationId: createUnregisteredTickets
      consumes:
      - application/1.1.0+json
      produces:
      - application/1.1.0+json
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: X-Body-Hash
        in: header
        description: Hash of the request body HMAC(SHA-3-512(body), secretKey).
        required: false
        type: string
      - name: X-ReCaptcha-Token
        in: header
        description: Token (hash) provided Google ReCaptcha v3.
        required: false
        type: string
      - in: body
        name: ticketsRequest
        description: Ticket(s) to be created
        required: true
        schema:
          $ref: '#/definitions/CreateUnregisteredTicketRequest'
      responses:
        "201":
          description: Ticket(s) successfully created
          schema:
            $ref: '#/definitions/CreateTicketResponseUnregistered'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/create/affiliate:
    post:
      tags:
      - Tickets
      summary: Create new ticket(s) for new account as affiliate partner
      operationId: createTicketsByAffiliate
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: ticketsRequest
        description: Ticket(s) to be created
        required: true
        schema:
          $ref: '#/definitions/CreateUnregisteredTicketRequest'
      security:
      - BasicAuth: []
      responses:
        "201":
          description: Ticket(s) successfully created
          schema:
            $ref: '#/definitions/CreateTicketResponseUnregistered'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/create/registered:
    post:
      tags:
      - Tickets
      summary: Create new ticket(s) for an account
      operationId: createRegisteredTickets
      consumes:
      - application/1.1.0+json
      produces:
      - application/1.1.0+json
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: ticketsRequest
        description: Ticket(s) to be created
        required: true
        schema:
          $ref: '#/definitions/CreateRegisteredTicketRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "201":
          description: Ticket(s) successfully created
          schema:
            $ref: '#/definitions/CreateTicketResponseRegistered'
  /tickets/{ticketId}:
    get:
      tags:
      - Tickets
      summary: Get ticket by ID
      operationId: getTicketById
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Ticket detail successfully retrieved
          schema:
            $ref: '#/definitions/Ticket'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{accountCode}/{ticketId}/affiliate:
    get:
      tags:
      - Tickets
      summary: Get ticket by ID for affiliate partner
      operationId: getTicketByIdforAffiliate
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: accountCode
        in: path
        description: Text code identifying a customer's account.
        required: true
        type: string
      security:
      - BasicAuth: []
      responses:
        "200":
          description: Ticket detail successfully retrieved
          schema:
            $ref: '#/definitions/Ticket'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{accountCode}/{ticketId}/cancel/affiliate:
    put:
      tags:
      - Tickets
      summary: Delete ticket by ID for affiliate partners
      operationId: cancelTicketByAffiliate
      parameters:
      - name: accountCode
        in: path
        description: Text code identifying a customer's account.
        required: true
        type: string
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CancelTicketRequest'
      security:
      - BasicAuth: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/cancel:
    put:
      tags:
      - Tickets
      summary: Delete ticket by ID
      operationId: cancelTicket
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CancelTicketRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/qrcode:
    get:
      tags:
      - Tickets
      summary: Get GR code for ticket
      description: Get QR code content in JSON format
      operationId: getTicketQrCode
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: QR code content in CSV format (European CSV/DSV). Fields separated by the semicolon character and row does not terminate with the newline character.
          examples:
            text/csv: 2;RJ_SEAT;123456789
          schema:
            $ref: '#/definitions/QrCodeTicket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/qrcode/png:
    get:
      tags:
      - Tickets
      summary: GR code for ticket
      description: Get QR code as a PNG image
      operationId: getTicketQrCodePng
      produces:
      - image/png
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: QR code png image
          schema:
            $ref: '#/definitions/QrCodeTicket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/print:
    get:
      tags:
      - Tickets
      summary: Print ticket
      description: Note the unusual HTML output, not JSON like most other methods!
      operationId: printTicket
      produces:
      - text/html
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Ticket HTML
          schema:
            type: string
            example: <html></html>
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/sendByEmail:
    post:
      tags:
      - Tickets
      summary: Send ticket to email
      operationId: sendTicketByEmail
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/TicketEmailRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/passengers/{passengerId}:
    put:
      tags:
      - Tickets
      summary: Update passenger on the ticket
      operationId: updatePassenger
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: passengerId
        in: path
        description: ID of the passenger
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: passenger
        description: Updated Passenger object
        required: true
        schema:
          $ref: '#/definitions/PassengerRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get change charge for this action
          schema:
            $ref: '#/definitions/PassengerChangeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
      - Tickets
      summary: Delete passenger from the ticket
      operationId: deletePassenger
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: passengerId
        in: path
        description: ID of the passenger
        required: true
        type: integer
        format: int64
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/DeletePassengerRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/{ticketId}/rating:
    get:
      tags:
      - Tickets
      summary: Get ticket rating questions
      operationId: getTicketDetailRating
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get forms to fill (per section)
          schema:
            type: array
            items:
              $ref: '#/definitions/RatingFormData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
      - Tickets
      summary: Update ticket rating
      operationId: putTicketDetailRating
      parameters:
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/PutRatingRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/timetickets/{timeTicketId}:
    get:
      tags:
      - TimeTickets
      summary: Get time ticket by ID
      operationId: getTimeTicketById
      parameters:
      - name: timeTicketId
        in: path
        description: ID of the timeTicket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Time ticket detail successfully retrieved
          schema:
            $ref: '#/definitions/TimeTicket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/timetickets/{timeTicketId}/cancel:
    put:
      tags:
      - TimeTickets
      summary: Delete time ticket by ID
      operationId: cancelTimeTicket
      parameters:
      - name: timeTicketId
        in: path
        description: ID of the timeTicket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CancelTicketRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /tickets/timetickets/checkin/{timeTicketId}:
    put:
      tags:
      - TimeTickets
      summary: Verify time ticket for connection.
      description: Verify time ticket by timeTicketID, connectionID, stationId and time . If everithing is OK return 200. If ticket doesnt exists return 404, else return 400.
      operationId: timeTicketCheckIn
      parameters:
      - name: timeTicketId
        in: path
        description: ID of the timeTicket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TimeTicketsCheckinRequest'
      responses:
        "200":
          description: Ticket checked in
          schema:
            $ref: '#/definitions/TimeTicketCheckinInfo'
        "400":
          description: Ticket checked in
          schema:
            $ref: '#/definitions/TimeTicketCheckinInfo'
        "403":
          description: Ticket is not valid
          schema:
            $ref: '#/definitions/TimeTicketCheckinInfo'
        "404":
          description: Ticket not found
  /pricelists/timeticket/{fromStationId}/{toStationId}/{timeTicketType}/{validFrom}/{tariff}:
    post:
      tags:
      - PriceList
      summary: Get timeTicket prices for tariff, ticket type, stationFrom, stationTo, dateTime and currency.
      operationId: getTimeTicketPrice
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: fromStationId
        in: path
        description: Valid station ID (city ID unsupported at this level)
        required: true
        type: integer
        format: int64
      - name: toStationId
        in: path
        description: Valid station ID (city ID unsupported at this level)
        required: true
        type: integer
        format: int64
      - name: timeTicketType
        in: path
        description: TimeTicket type enum.name (FLEX, DAY, WEEK, MONTH)
        required: true
        type: string
      - name: validFrom
        in: path
        description: Date for validation date and time in TimeTicketPrices
        required: true
        type: string
      - name: tariff
        in: path
        description: Tariff enum.name
        required: true
        type: string
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      responses:
        "200":
          description: List of timeticket price
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeTicketPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/login/registeredAccount:
    post:
      tags:
      - Users
      description: Login for "Registered Account"
      operationId: loginRegisteredAccount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Body-Hash
        in: header
        description: Hash of the request body HMAC(SHA-3-512(body), secretKey).
        required: false
        type: string
      - in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/RegisteredLogin'
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/login/unregisteredAccount:
    post:
      tags:
      - Users
      description: Login for "Unregistered Account"
      operationId: loginUnregisteredAccount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Body-Hash
        in: header
        description: Hash of the request body HMAC(SHA-3-512(body), secretKey).
        required: false
        type: string
      - name: X-ReCaptcha-Token
        in: header
        description: Token (hash) provided Google ReCaptcha v3.
        required: false
        type: string
      - in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/UnregisteredLogin'
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/login/mojeId:
    post:
      tags:
      - Users
      description: Login via mojeId
      operationId: loginMojeIdAccount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/MojeIdLogin'
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/inline_response_200'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/authenticate:
    get:
      tags:
      - Users
      description: Validation of Auth token
      operationId: authenticate
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/signup/registeredAccount:
    post:
      tags:
      - Users
      description: Register new account
      operationId: signupRegisteredAccount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Body-Hash
        in: header
        description: Hash of the request body HMAC(SHA-3-512(body), secretKey).
        required: false
        type: string
      - name: X-ReCaptcha-Token
        in: header
        description: Token (hash) provided Google ReCaptcha v3.
        required: false
        type: string
      - in: body
        name: registeredAccount
        required: false
        schema:
          $ref: '#/definitions/SignupRegisteredAccountRequest'
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/signup/registeredAccount/simple:
    post:
      tags:
      - Users
      description: Register new credit account from open account
      operationId: signupSimpleRegisteredAccount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SimpleRegisteredAccountRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/forgottenPassword:
    post:
      tags:
      - Users
      description: Request password reset
      operationId: forgottenPassword
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ForgottenPasswordRequest'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/resetPassword:
    post:
      tags:
      - Users
      description: Setup of new password
      operationId: resetPassword
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        description: Reset password request
        required: true
        schema:
          $ref: '#/definitions/ResetPasswordRequest'
      security:
      - Bearer: []
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/Token'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/resetPassword/verify:
    get:
      tags:
      - Users
      description: Validate password reset token
      operationId: verifyResetPasswordToken
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/settings/changePassword:
    put:
      tags:
      - Users
      description: Change Password
      operationId: changeUserPassword
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: request
        description: Change password request
        required: true
        schema:
          $ref: '#/definitions/ChangePasswordRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/settings/changeUserInformation:
    put:
      tags:
      - Users
      description: Change User Information
      operationId: changeUserInformation
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: changeUserRequest
        required: true
        schema:
          $ref: '#/definitions/ChangeUserRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/settings/changeMojeid:
    put:
      tags:
      - Users
      description: Change Mojeid
      operationId: userSettingsChangeMojeid
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: Change Mojeid
        required: false
        schema:
          $ref: '#/definitions/Change Mojeid'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /users/logout:
    post:
      tags:
      - Users
      description: Logout
      operationId: userLogout
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /content/layout:
    get:
      tags:
      - Content
      description: Get the layout
      operationId: contentLayout
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Layout'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /content/news:
    get:
      tags:
      - Content
      description: Get the news
      operationId: contentNews
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/News'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments:
    get:
      tags:
      - Payments
      description: Get history of transactions
      operationId: getPayments
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: limit
        in: query
        description: Page size limit (states how many elements should return).
        required: false
        type: integer
        default: 10
      - name: offset
        in: query
        description: Page number (value must be dividable by limit)
        required: false
        type: integer
        default: 0
      - name: dateFrom
        in: query
        description: Filtres payments with realization date higher than
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: Filtres payments with realization date lower than
        required: false
        type: string
        format: date-time
      - name: type
        in: query
        description: Filtres payments type(s)
        required: false
        type: array
        items:
          type: string
          default: ""
          enum:
          - DIRECT
          - CREDIT
        collectionFormat: multi
        uniqueItems: true
      - name: sortDirection
        in: query
        description: Sorting direction
        required: false
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get list of payments
          headers:
            X-Pagination-Total:
              type: integer
              description: Total count of filtered items.
          schema:
            type: array
            items:
              $ref: '#/definitions/Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/print/invoice:
    post:
      tags:
      - Payments
      description: Print invoice for given payments (Da�ov� doklad). Note the unusual HTML output, not JSON like most other methods!
      operationId: printBulkInvoice
      produces:
      - text/html
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: payments
        required: true
        schema:
          $ref: '#/definitions/PrintInvoicesRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Payment invoice HTML
          schema:
            type: string
            example: <html></html>
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/{paymentId}/print/invoice:
    get:
      tags:
      - Payments
      summary: Print payment invoice
      description: Note the unusual HTML output, not JSON like most other methods!
      operationId: printInvoice
      produces:
      - text/html
      parameters:
      - name: paymentId
        in: path
        description: ID of the payment
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Payment invoice HTML
          schema:
            type: string
            example: <html></html>
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/{paymentId}/print/receipt:
    get:
      tags:
      - Payments
      summary: Print payment receipt
      description: Note the unusual HTML output, not JSON like most other methods!
      operationId: printReceipt
      produces:
      - text/html
      parameters:
      - name: paymentId
        in: path
        description: ID of the payment
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Payment receipt HTML
          schema:
            type: string
            example: <html></html>
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/methods:
    post:
      tags:
      - Payments
      description: Get list of payment methods
      operationId: getPaymentsMethods
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: paymentsMethodsRequest
        description: Collection of ticket IDs (may be empty or missing)
        required: false
        schema:
          $ref: '#/definitions/PaymentsMethodsRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get list of payment methods
          headers:
            X-Pagination-Total:
              type: integer
              description: Total count of filtered items.
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/form:
    post:
      tags:
      - Payments
      description: Get the form desription for a payment
      operationId: getPaymentForm
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: paymentFormRequest
        description: Ticket IDs and selected payment method
        required: true
        schema:
          $ref: '#/definitions/PaymentFormFieldRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: List of payment form fields
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentFormField'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/pay:
    post:
      tags:
      - Payments
      description: Make a payment through a payment method
      operationId: paymentsPay
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: payRequest
        description: Ticket(s) payment request
        required: true
        schema:
          $ref: '#/definitions/PayRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get redirect URL
          schema:
            $ref: '#/definitions/CreditAddResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/{ticketId}/pay:
    put:
      tags:
      - Payments
      description: Mark a ticket as paid directly
      operationId: payTicketByAffiliate
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: ticketId
        in: path
        description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
        required: true
        type: integer
        format: int64
      security:
      - BasicAuth: []
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/credit/charge:
    post:
      tags:
      - Payments
      description: Make a payment witch charge credit
      operationId: paymentsCreditCharge
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: chargeRequest
        required: true
        schema:
          $ref: '#/definitions/ChargeRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get remaining credit
          schema:
            $ref: '#/definitions/ChargeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/credit/add:
    post:
      tags:
      - Payments
      description: Add credit through a payment method
      operationId: paymentsCreditAdd
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: creditAddRequest
        required: true
        schema:
          $ref: '#/definitions/CreditAddRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Get redirect URLs
          schema:
            $ref: '#/definitions/CreditAddResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/credit/giftCertificate/verify:
    post:
      tags:
      - Payments
      description: Verify validity of a gift certificate
      operationId: verifyGiftCertificate
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: verifyGiftCertificateRequest
        required: true
        schema:
          $ref: '#/definitions/VerifyGiftCertificateRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Information about gift certificate
          schema:
            $ref: '#/definitions/GiftCertificateInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: User account isnt registered as credit ticket (gift certificate can't be applied on unregistered open ticket)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /payments/credit/giftCertificate/add:
    post:
      tags:
      - Payments
      description: Add credit through a gift certificate
      operationId: paymentsCreditGiftCertificateAdd
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: addGiftCertificateRequest
        required: true
        schema:
          $ref: '#/definitions/AddGiftCertificateRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "201":
          description: Credit was add through a gift certificate
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: User account isnt registered as credit ticket (gift certificate can't be applied on unregistered open ticket)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /discounts/percentual:
    get:
      tags:
      - Discounts
      summary: Get possible discounts for given account.
      operationId: getPercentualByUser
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Available discounts
          schema:
            type: array
            items:
              $ref: '#/definitions/Discount'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
  /discounts/code/{code}/verify:
    post:
      tags:
      - Discounts
      summary: Verify code discount compatibility with a given route
      operationId: verifyCodeDiscount
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: code
        in: path
        required: true
        type: string
      - in: body
        name: ticketRequest
        description: Potential ticket information which needs to be checked by discount terms
        required: true
        schema:
          $ref: '#/definitions/VerifyDiscountRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Applyable discount (with naive amount) verified for given route
          schema:
            $ref: '#/definitions/VerifiedDiscountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /discounts/percentual/{discountId}/verify:
    post:
      tags:
      - Discounts
      summary: Verify percentual discount compatibility with a given route
      operationId: verifyPercentualDiscount
      parameters:
      - name: discountId
        in: path
        description: Percentage discount ID which is supposed to be applied on route.
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/VerifyDiscountRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "200":
          description: Applyable discount (with naive amount) verified for given route
          schema:
            $ref: '#/definitions/VerifiedDiscountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /addons:
    post:
      tags:
      - Addons
      summary: Get possible addons for given route.
      operationId: getAvailableAddons
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/AvailableAddonsRequest'
      responses:
        "200":
          description: Get list of possible addons.
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableAddon'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
      - Addons
      summary: Order tickets addons
      operationId: orderAddons
      parameters:
      - name: ticketId
        in: query
        description: ID of the ticket. Unlike other endpoints, it is taken from the query, not from the path.
        required: true
        type: integer
        format: int64
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - in: body
        name: orderAddonsRequest
        required: true
        schema:
          $ref: '#/definitions/OrderAddonsRequest'
      security:
      - Bearer: []
      - Bearer: []
        BearerHash: []
      responses:
        "201":
          description: Successfully created
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Permissions denied
          schema:
            $ref: '#/definitions/ErrorResponse'
  /addons/verify:
    post:
      tags:
      - Addons
      summary: Verify validity of addons selection
      operationId: verifyAddons
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - in: body
        name: addonsVerifyRequest
        required: true
        schema:
          $ref: '#/definitions/AddonsVerifyRequest'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/locations:
    get:
      tags:
      - Consts
      summary: List all possible locations served by RegioJet transportation services
      operationId: getLocations
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: stationType
        in: query
        description: |
          * `BUS_STATION` - bus station
          * `TRAIN_STATION` - train station
        required: false
        type: string
      responses:
        "200":
          description: A list of served locations, grouped in a tree structure by countries and cities
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/seatClasses:
    get:
      tags:
      - Consts
      summary: Get all possible seat classes
      description: Note the difference between tariffs, seat classes and vehicle standards
      operationId: getSeatClasses
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: A list of seat classes
          schema:
            type: array
            items:
              $ref: '#/definitions/SeatClass'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/tariffs:
    get:
      tags:
      - Consts
      summary: Get all possible tariffs
      description: Note the difference between tariffs, seat classes and vehicle standards
      operationId: getTariffs
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: A list of possible tariffs
          schema:
            type: array
            items:
              $ref: '#/definitions/Tariff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/timetables:
    get:
      tags:
      - Consts
      summary: Get timetables of all connections or of a single one
      operationId: getTimetables
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: connectionId
        in: query
        description: ID of the connection for which we want the timetables. Timetables of all connections will be returned if the parameter is omitted. You can get connection IDs in responses of **/routes/search**, in **Route.Section.Line.id** part of of the result.
        required: false
        type: integer
        format: int64
      responses:
        "200":
          description: Timetables for one or for all connections
          schema:
            type: array
            items:
              $ref: '#/definitions/Timetable'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/vehicleStandards:
    get:
      tags:
      - Consts
      summary: Get all possible vehicle standards
      description: Note the difference between tariffs, seat classes and vehicle standards
      operationId: getVehicleStandards
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: A list of vehicle standards
          schema:
            type: array
            items:
              $ref: '#/definitions/VehicleStandard'
        "400":
          description: Error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/translations/{language}:
    get:
      tags:
      - Consts
      summary: Get the used dictionary of the selected language
      parameters:
      - name: language
        in: path
        description: Very similar to X-Lang parameter of other endpoints, but it is taken from the path instead of a header field.
        required: true
        type: string
        enum:
        - en
        - cs
        - de
        - sk
        - hu
        - fr
        - es
        - ru
        - ua
        - zh
      responses:
        "200":
          description: A list of all used words, translated to the given language
          schema:
            $ref: '#/definitions/LanguageDictionary'
  /consts/paymentMethods:
    get:
      tags:
      - Consts
      summary: Get the list of all payment methods
      description: Methods are marked as active if they are available and accept payments in the currency passed in X-Currency parameter.
      operationId: getOnlinePaymenthMethods
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      responses:
        "200":
          description: A list of payment methods
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentMethod'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/cityPairs:
    get:
      tags:
      - Consts
      summary: Returns List of possible CityPairs
      operationId: getCityPairs
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-Currency
        in: header
        description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
        required: false
        type: string
        default: EUR
      - name: fromCityId
        in: query
        description: from City Id
        required: false
        type: integer
        format: int64
      - name: toCityId
        in: query
        description: to City Id
        required: false
        type: integer
        format: int64
      - name: numberOfTransfers
        in: query
        description: number of Transfers
        required: false
        type: integer
        default: 0
      responses:
        "200":
          description: A list of possible City Pairs
          schema:
            type: array
            items:
              $ref: '#/definitions/CityPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/carriers:
    get:
      tags:
      - Consts
      summary: Returns List of Carriers
      operationId: getCarriers
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      responses:
        "200":
          description: A list of Carriers
          schema:
            type: array
            items:
              $ref: '#/definitions/Carrier'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /consts/actionPrices:
    get:
      tags:
      - Consts
      summary: Returns list of Action Prices
      operationId: getActionPrices
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: activeOnly
        in: query
        description: Get only active of action prices
        required: false
        type: boolean
        default: true
      responses:
        "200":
          description: A list of Action Prices
          schema:
            type: array
            items:
              $ref: '#/definitions/ActionPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /support/sendContactForm:
    post:
      tags:
      - Others
      description: Sends support "Contact our director" form
      operationId: sendContaForm
      parameters:
      - name: X-Lang
        in: header
        description: |
          The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

          - `cs` (Czech)
          - `sk` (Slovak)
          - `de` (German)
          - `hu` (Hungarian)
          - `fr` (French)
          - `es` (Spanish)
          - `ru` (Russian)
          - `ua` (Ukrainian)
          - `zh` (Chinese)
          - `en` (English)

          Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
        required: false
        type: string
        default: en
      - name: X-ReCaptcha-Token
        in: header
        description: Token (hash) provided Google ReCaptcha v3.
        required: false
        type: string
      - in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ContactFormRequest'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized (invalid token or credentials)
          schema:
            $ref: '#/definitions/ErrorResponse'
securityDefinitions:
  Bearer:
    description: Authorization for customer
    type: apiKey
    name: Authorization
    in: header
  BearerHash:
    description: Hash of the Bearer Token HMAC(SHA-3-512(token), secretKey).
    type: apiKey
    name: X-Token-Hash
    in: header
  BasicAuth:
    description: Authorization for affiliate partner
    type: basic
  OAuth2:
    type: oauth2
    authorizationUrl: https://example.com/oauth/authorize
    tokenUrl: https://example.com/oauth/token
    flow: accessCode
    scopes:
      user: Logged user
definitions:
  RouteSeatsRequest:
    type: object
    required:
    - seatClass
    - sections
    - tariffs
    properties:
      sections:
        type: array
        items:
          $ref: '#/definitions/SimpleSection'
      tariffs:
        type: array
        items:
          type: string
          example: REGULAR
      seatClass:
        type: string
        example: C1
  SearchResult:
    type: object
    properties:
      routes:
        type: array
        items:
          $ref: '#/definitions/Route'
      routesMessage:
        type: string
        example: Connection between these destinations dont exist. Edit your search parameters and try again
        description: Message describing exceptionally behavior or route search states
      bannerBubbles:
        type: array
        items:
          $ref: '#/definitions/BannerBubble'
      textBubbles:
        type: array
        items:
          $ref: '#/definitions/TextBubble'
  SimpleSearchResult:
    type: object
    properties:
      routes:
        type: array
        items:
          $ref: '#/definitions/SimpleRoute'
      routesMessage:
        type: string
        example: Connection between these destinations dont exist. Edit your search parameters and try again
        description: Message describing exceptionally behavior or route search states
      bannerBubbles:
        type: array
        items:
          $ref: '#/definitions/BannerBubble'
      textBubbles:
        type: array
        items:
          $ref: '#/definitions/TextBubble'
  BannerBubble:
    type: object
    required:
    - id
    - imageUrl
    - text
    properties:
      id:
        type: integer
        format: int64
        example: 20394859403
      text:
        type: string
        example: There's security members walking through train during travel
        description: Extra information for bubble
      url:
        type: string
        example: https://www.regiojet.com/services/services-on-board-of-trains/
        description: Redirection to more information
      imageUrl:
        type: string
        description: Bubble picture URL address
    description: Bubble picture with possibility of redirection to more informations
  TextBubble:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 40005893098
      text:
        type: string
        example: There's security members walking through train during travel
  Payment:
    type: object
    required:
    - amount
    - currency
    - dateTransaction
    - isInvoiceAvailable
    - isReceiptAvailable
    - method
    - paymentId
    properties:
      paymentId:
        type: integer
        format: int64
        example: 19384904403
      ticketId:
        type: integer
        format: int64
        example: 3895569002
      description:
        type: string
        example: Deposited 100 CZK
      amount:
        type: number
        example: 100.0
      currency:
        $ref: '#/definitions/Currency'
      method:
        $ref: '#/definitions/TransactionMethod'
      dateTransaction:
        type: string
        format: date-time
      isReceiptAvailable:
        type: boolean
        example: true
      isInvoiceAvailable:
        type: boolean
        example: true
  TransactionMethod:
    type: string
    example: CREDIT_CARD
    enum:
    - ACCOUNT
    - CASH
    - BANK_TRANSFER
    - GIFT_CERTIFICATE
    - CREDIT_CARD
    - ONLINE_PAYMENT
  PaymentMethod:
    type: object
    required:
    - active
    - paymentMethodCode
    - paymentType
    properties:
      paymentMethodCode:
        type: string
        example: GPE_ONLINE_CARD
        description: Payment method code identifier
      paymentType:
        $ref: '#/definitions/PaymentType'
      active:
        type: boolean
        description: Checks if payment method is active
      description:
        type: string
        example: Payment method is available
        description: 'Payment method status (for example: why its not available)'
      deadline:
        type: string
        format: date-time
        description: Payment method availability expiration date-time
      deadlineAt:
        type: integer
        example: 60
        description: Minutes left to end of payment method availability
  PaymentType:
    type: string
    description: Payment method category
    example: ONLINE
    enum:
    - ONLINE
    - CASH
    - TRANSFER
    - GIFT
  PaymentFormFieldValue:
    type: object
    required:
    - fieldType
    - fieldValue
    properties:
      fieldType:
        $ref: '#/definitions/PaymentFormFieldType'
      fieldValue:
        type: string
        example: dobroslav.pelc@studentagency.cz
  PaymentFormFieldRequest:
    type: object
    required:
    - paymentMethodCode
    properties:
      tickets:
        type: array
        items:
          type: integer
          format: int64
      paymentMethodCode:
        type: string
        example: VISA
  PaymentFormField:
    type: object
    required:
    - fieldName
    - fieldType
    properties:
      fieldName:
        type: string
        description: Label name
      fieldType:
        $ref: '#/definitions/PaymentFormFieldType'
  PaymentFormFieldType:
    type: string
    description: Valid field types required for payment form.
    example: EMAIL
    enum:
    - EMAIL
    - FIRST_NAME
    - SURNAME
    - PASSWORD
    - PASSWORD_CONFIRMATION
  PayRequest:
    type: object
    required:
    - correlationId
    - formFields
    - paymentMethodCode
    - tickets
    properties:
      paymentMethodCode:
        type: string
        example: VISA
      correlationId:
        type: string
        example: ABCD1234
      formFields:
        type: array
        items:
          $ref: '#/definitions/PaymentFormFieldValue'
      tickets:
        type: array
        description: Ticket collection requested to be paid from credit
        items:
          $ref: '#/definitions/PaymentTicketRequest'
  CreditAddRequest:
    type: object
    required:
    - amount
    - correlationId
    - currency
    - formFields
    - paymentMethodCode
    properties:
      amount:
        type: number
        example: 300.0
      currency:
        $ref: '#/definitions/Currency'
      paymentMethodCode:
        type: string
        example: VISA
      correlationId:
        type: string
        example: ABCD1234
      formFields:
        type: array
        items:
          $ref: '#/definitions/PaymentFormFieldValue'
    description: User registered account credit charge request
  CreditAddResponse:
    type: object
    required:
    - payRedirectUrl
    - regiojetRedirectUrl
    properties:
      payRedirectUrl:
        type: string
        example: https://secure.payu.com/paygw/UTF/NewPayment
      regiojetRedirectUrl:
        type: string
        example: https://jizdenky.regiojet.cz/payments
  Country:
    type: object
    required:
    - cities
    - code
    - country
    properties:
      country:
        type: string
        example: Czech republic
      code:
        type: string
        example: CZ
      cities:
        type: array
        items:
          $ref: '#/definitions/City'
  City:
    type: object
    required:
    - id
    - name
    - stations
    properties:
      id:
        type: integer
        format: int64
        example: 10202002
        description: City identifier
      name:
        type: string
        example: Brno
      aliases:
        type: array
        description: City nickname or aliases (Bratislava --> Blava)
        items:
          type: string
      stationsTypes:
        type: array
        items:
          type: string
          example: |
            * `BUS_STATION` - bus station
            * `TRAIN_STATION` - train station
      stations:
        type: array
        items:
          $ref: '#/definitions/Station'
  Station:
    type: object
    required:
    - fullname
    - id
    - name
    - significance
    properties:
      id:
        type: integer
        format: int64
        example: 10204002
        description: Station identifier
      name:
        type: string
        example: AN u hotelu Grand
      fullname:
        type: string
        example: Prague, �AN Florenc
      aliases:
        type: array
        description: City nickname or aliases (Bratislava --> Blava)
        items:
          type: string
          example: Grand
      address:
        type: string
        example: K�i��kova 552/2, 186 00 Karl�n
      stationsTypes:
        type: array
        items:
          type: string
          example: |
            * `BUS_STATION` - bus station
            * `TRAIN_STATION` - train station
      iataCode:
        type: string
        example: PRG
      stationUrl:
        type: string
        example: https://www.regiojet.cz/jizdni-rady-a-zastavky/zastavky/10204003.html
      stationTimeZoneCode:
        type: string
        example: Europe/Prague
      wheelChairPlatform:
        type: string
        example: |
          * `CD` - �esk� dr�hy
          * `RJ` - regiojet
      significance:
        type: integer
        example: 2
        description: 'Station significancion (for example: for city Brno, there is Grand station more significant than Bohunice station)'
      longitude:
        type: number
        example: 16.6142520904541
        description: GPS - longitude
      latitude:
        type: number
        example: 49.1933555603027
        description: GPS - latitude
      imageUrl:
        type: string
        example: https://any.domain.org/image.png
        description: 'Station picture URL (for example: may contain detail information about transfer)'
  CityPair:
    type: object
    required:
    - arrivalCityId
    - departureCityId
    - numberOfTransfers
    - transportTypes
    properties:
      departureCityId:
        type: integer
        format: int64
        example: 10202082
        description: Id mesta odjezdu
      arrivalCityId:
        type: integer
        format: int64
        example: 10202000
        description: Id mesta prijezdu
      numberOfTransfers:
        type: integer
        example: 1
        description: Pocet prestupu
      transportTypes:
        type: array
        example: TRAIN, BUS
        description: Typ spojeni mezi mesty
        items:
          type: string
      iataCodesForDepartureCity:
        type: array
        example: MIL
        description: IATA kody odjezdoveho mesta
        items:
          type: string
      iataCodesForArrivalCity:
        type: array
        example: PRG
        description: IATA kody prijezdoveho mesta
        items:
          type: string
    description: Mozna kombinace spojeni mezi dvema mesty
  PriceClass:
    type: object
    required:
    - bookable
    - conditions
    - creditPrice
    - customerNotifications
    - freeSeatsCount
    - price
    - priceSource
    - seatClassKey
    - services
    - tariffs
    properties:
      seatClassKey:
        type: string
        example: C1
        description: Enum.name
      conditions:
        $ref: '#/definitions/PriceConditions'
      services:
        type: array
        description: Services icons (wifi, etc.)
        items:
          type: string
          example: wifi
      freeSeatsCount:
        type: integer
        example: 71
      price:
        type: number
        example: 299.0
      creditPrice:
        type: number
        example: 259.0
      priceSource:
        type: string
        example: 3870611089<3088864001-3741302011-3863407000>
        description: Pricing ID - used for price, services or terms confirmation after route search
      customerNotifications:
        type: array
        example: Connection is operated by partner carrier company MT-Lines
        description: Customer notifications
        items:
          type: string
      actionPrice:
        $ref: '#/definitions/ActionPrice'
      tariffs:
        type: array
        items:
          type: string
          example: REGULAR
      tariffNotifications:
        $ref: '#/definitions/TariffNotifications'
      bookable:
        type: boolean
        example: true
        description: There are free seats in class for reservation if TRUE otherwise FALSE
  TariffNotifications:
    type: object
    required:
    - content
    - description
    - title
    properties:
      title:
        type: string
        example: Following tariffs do not have discounts
        description: Notification header translation
      description:
        type: string
        example: These tariffs were changed to tariffs corresponding with reserved route. Price remained unchanged
        description: Notification description translation
      content:
        type: array
        items:
          type: string
          example: DISABLED --> REGULAR
          description: Detail of tariff change
  ActionPrice:
    type: object
    required:
    - code
    - id
    - name
    - showIcon
    - url
    properties:
      id:
        type: integer
        format: int64
        example: 23004854593
        description: Event price ID (required to confirm applying more discounts)
      code:
        type: string
        example: akcni_evropa
        description: Event price code tag
      name:
        type: string
        example: Action Europe
        description: Event price name
      url:
        type: string
        example: https://www.regiojet.com/promotional-offers/europe-special-deals.html
        description: More event information redirect URL
      description:
        type: string
      showIcon:
        type: boolean
        description: Should icon be shown at event name?
  PriceConditions:
    type: object
    required:
    - code
    - descriptions
    properties:
      code:
        type: string
        example: AB42CAB42CAB42CAB42CAB42CAB42C5F
        description: Control MD5 hash transformed from conditions content (used for current terms visibility check)
      descriptions:
        $ref: '#/definitions/PriceConditionsDescriptions'
      refundToOriginalSourcePossible:
        type: boolean
        example: false
        description: States that if its possible to refund money to origin money source
      cancelCharge:
        type: number
        example: 399.0
        description: Total count of all cancel charges in current currency
      cancelCharges:
        type: array
        items:
          $ref: '#/definitions/CancelCharge'
  PriceConditionsDescriptions:
    type: object
    properties:
      cancel:
        type: string
        example: 'More than 15 minutes till departure: 0 %, less than 15 minutes: cannot be canceled'
        description: Cancel charge
      rebook:
        type: string
        example: 'More than 15 minutes till departure: cancel charge 0 %, less than 15 minutes: cannot be re-reservated'
        description: Rebook
      expiration:
        type: string
        example: 3 minutes (18.12.17 11:32 SE�)
        description: Payment expiration
    description: Text description of conditions various types linked to price conditions
  CancelCharge:
    type: object
    required:
    - amount
    properties:
      message:
        type: string
        example: Ticket cancellation
        description: Cancel charge description
      amount:
        type: number
        example: 110.0
        description: Amount in CZK/EUR currency from ticket/addon/... which wont be refunded.
      currency:
        $ref: '#/definitions/Currency'
      percent:
        type: integer
        example: 10
        description: How many % from origin amount will be get rid of
    description: Cancel charge (fixed orientation amount which can be differ in rounding of amount stated on account with cancel)
  Section:
    type: object
    required:
    - arrivalCityId
    - arrivalStationId
    - arrivalTime
    - departureCityId
    - departureStationId
    - departureTime
    - fixedSeatReservation
    - id
    - line
    - support
    - travelTime
    - vehicleStandardKey
    - vehicleType
    properties:
      id:
        type: integer
        format: int64
      vehicleStandardKey:
        type: string
        example: FUN_RELAX
      support:
        type: boolean
        description: TRUE => support connnection; FALSE => RegioJet connection
      supportCode:
        type: string
        example: P1, P2, ...
        description: Codes of individuals support connection on a single route
      vehicleType:
        $ref: '#/definitions/VehicleType'
      fixedSeatReservation:
        type: boolean
        description: TRUE => seat reservation; FALSE => seat is chosen while boarding
      line:
        $ref: '#/definitions/Line'
      departureStationId:
        type: integer
        format: int64
      departureStationName:
        type: string
      departureCityId:
        type: integer
        format: int64
      departureCityName:
        type: string
      departureTime:
        type: string
        format: date-time
      departurePlatform:
        type: string
        example: ""
      arrivalStationId:
        type: integer
        format: int64
      arrivalStationName:
        type: string
      arrivalCityId:
        type: integer
        format: int64
      arrivalCityName:
        type: string
      arrivalTime:
        type: string
        format: date-time
      arrivalPlatform:
        type: string
        example: |
          * `BUS` - 3
          * `BUS` - S2
          * `BUS` - Streat title (used exceptionally, for example at lockout or detour)
          * `VLAK` - 2/1
          * `VLAK` - -/1
          * `VLAK` - 1/-
          * `VLAK` - -/-
      carrierId:
        type: integer
        format: int64
        description: Company Id
      freeSeatsCount:
        type: integer
      notices:
        type: array
        description: Extraordinary event on route / traffic limitation
        items:
          type: string
          example: There are fatal accident on line, delay will be 120 minutes
      services:
        type: array
        description: Available services on this connection
        items:
          type: string
          example: wifi
      delay:
        type: string
        example: 00:15 h
        description: Textual information about the delay on a given section
      travelTime:
        type: string
        example: 01:10 h
        description: Textual information about the travel time on a given section
  Line:
    type: object
    required:
    - connectionId
    - from
    - to
    properties:
      connectionId:
        type: integer
        format: int64
        example: 1504532244
        description: section.id (necessarily to get informations about line detail)
      code:
        type: string
        example: RJ 1021
        description: Line connection code (as unique identifier as line connection departure date)
      from:
        type: string
        example: Prague
        description: Departure city of line connection
      to:
        type: string
        example: Brno
        description: Arrival city of line connection
    description: Line connection general informations
  VehicleStandard:
    type: object
    required:
    - description
    - imageUrl
    - key
    - name
    - supportImageUrl
    properties:
      key:
        type: string
        example: FUN_RELAX
        description: Enum.name
      name:
        type: string
        example: Fun & Relax
      description:
        type: string
        example: Individual touch screen, 230 V plug-ins, newspapers, magazines and hot beverage for free. Cold beverages and refreshments, WIFI in CZ or SK
      imageUrl:
        type: string
        example: $host/resources/standard/fun-relax.png
      supportImageUrl:
        type: string
        example: $host/resources/standard/fun-relax_support.png
        description: Picture of standards available in support vehicle URL
      galleryUrl:
        type: string
        example: https://www.regiojet.com/services/services-on-board-of-trains/
        description: Photogallery of standards URL
    description: Vehicle standards description and available services
  VehicleType:
    type: string
    enum:
    - BUS
    - TRAIN
  Route:
    type: object
    required:
    - arrivalCityId
    - arrivalStationId
    - arrivalTime
    - bookable
    - departureCityId
    - departureStationId
    - departureTime
    - freeSeatsCount
    - id
    - mainSectionId
    - sections
    properties:
      id:
        type: string
        description: '{section0.id},{section1.id}, ... '
      mainSectionId:
        type: integer
        format: int64
        description: Major part of the route. Only for this section can customer select Class or Standard.
      departureStationId:
        type: integer
        format: int64
      departureStationName:
        type: string
        example: �AN Florenc
      departureCityId:
        type: integer
        format: int64
      departureCityName:
        type: string
        example: Prague
      departureTime:
        type: string
        format: date-time
        example: 2017-12-19T19:00:00.000+02:00
      arrivalStationId:
        type: integer
        format: int64
      arrivalStationName:
        type: string
        example: AN u hotelu Grand
      arrivalCityId:
        type: integer
        format: int64
      arrivalCityName:
        type: string
        example: Brno
      arrivalTime:
        type: string
        format: date-time
        example: 2017-12-19T21:35:00.000+02:00
      freeSeatsCount:
        type: integer
        example: 44
        description: Returns smallest number of available free seats through all sections
      priceFrom:
        type: number
        example: 169.0
      priceTo:
        type: number
        example: 1209.0
      creditPriceFrom:
        type: number
        example: 159.0
      creditPriceTo:
        type: number
        example: 1109.0
      vehicleTypes:
        type: array
        items:
          $ref: '#/definitions/VehicleType'
      priceClasses:
        type: array
        items:
          $ref: '#/definitions/PriceClass'
      surcharge:
        $ref: '#/definitions/Surcharge'
      sections:
        type: array
        items:
          $ref: '#/definitions/Section'
      notices:
        type: boolean
        example: true
        description: Notice of any extraordinarily events on route / traffic limitation
      transfersInfo:
        $ref: '#/definitions/TransfersInfo'
      nationalTrip:
        type: boolean
        example: true
        description: TRUE => national, FALSE => international
      bookable:
        type: boolean
        example: true
        description: TRUE if at least one class have enough free seats for reservation, otherwise FALSE
      delay:
        type: string
        example: 00:15 h
        description: Textual information about the first delay on the route
      travelTime:
        type: string
        example: 03:30 h
        description: Textual information about the travel time on the route
  SimpleRoute:
    type: object
    required:
    - actionPrice
    - arrivalTime
    - bookable
    - creditPriceFrom
    - departureTime
    - freeSeatsCount
    - id
    - notices
    - priceFrom
    - pricesCount
    - support
    - surcharge
    - vehicleTypes
    properties:
      id:
        type: string
        description: '{section0.id},{section1.id}, ... '
      departureStationId:
        type: integer
        format: int64
        example: 10204002
      departureTime:
        type: string
        format: date-time
        example: 2017-12-19T19:00:00.000+02:00
      arrivalStationId:
        type: integer
        format: int64
        example: 10204000
      arrivalTime:
        type: string
        format: date-time
        example: 2017-12-19T21:35:00.000+02:00
      vehicleTypes:
        type: array
        description: 'Connection type (for example: train, bus)'
        items:
          $ref: '#/definitions/VehicleType'
      transfersCount:
        type: integer
        example: 3
        description: Amount of transfers
      freeSeatsCount:
        type: integer
        example: 44
        description: Returns smallest number of available free seats through all sections
      priceFrom:
        type: number
        example: 169.0
      priceTo:
        type: number
        example: 1209.0
      creditPriceFrom:
        type: number
        example: 159.0
      creditPriceTo:
        type: number
        example: 1109.0
      pricesCount:
        type: integer
        example: 2
        description: Amount of prices
      actionPrice:
        type: boolean
        example: false
        description: TRUE if any of prices is action price, otherwise FALSE
      surcharge:
        type: boolean
        example: false
        description: TRUE if there is surcharge on this line, otherwise FALSE
      notices:
        type: boolean
        example: true
        description: Notice of any extraordinarily events on route / traffic limitation
      support:
        type: boolean
        example: true
        description: TRUE if this line (or its part) have support connection, otherwise FALSE
      nationalTrip:
        type: boolean
        example: true
        description: TRUE => national, FALSE => international
      bookable:
        type: boolean
        example: true
        description: TRUE if at least one class have enough free seats for reservation, otherwise FALSE
      delay:
        type: string
        example: 00:15 h
        description: Textual information about the first delay on the route
      travelTime:
        type: string
        example: 03:30 h
        description: Textual information about the travel time on the route
      vehicleStandardKey:
        type: string
        example: FUN_RELAX
        description: Vehicle standard code tag
  Surcharge:
    type: object
    required:
    - notification
    - price
    properties:
      price:
        type: number
        example: 300.0
        description: Surcharge amount (isnt included in basic line price or even in priceClass)
      notification:
        type: string
        example: Every reservation into this connection will be in addition charged with irreversible surcharge of 300 CZK
        description: Notification which needs to be confirmed by customer
    description: Compulsory irreversible surcharge
  Seat:
    type: object
    properties:
      index:
        type: integer
        example: 15
        description: Number of seat in vehicle
      seatClass:
        type: string
        example: RELAX
      seatConstraint:
        type: string
        example: Only women are allowed to this coupe
        description: Notification which needs to be confirmed by customer before continue in reservation
      seatNotes:
        type: array
        example:
        - You've choosed seat in LOW COST class - without service. Seats are equipped with elbow armrest and are unmovable, thats why they're suitable for short distance traveling. Bottled water Rajec, newspapers and magazines are available. Enjoy undisturbed travel with option of watching more than 50 movies, listening music and playing games in your own device.
        description: Supplementary informations which are shown but isnt required to be confirmed
        items:
          type: string
  Tariff:
    type: object
    properties:
      key:
        type: string
        example: REGULAR
        description: Used tariff enum value
      value:
        type: string
        example: Adult
        description: Tariff translation
  Currency:
    type: string
    example: CZK
    enum:
    - EUR
    - CZK
    default: EUR
  CustomerActions:
    type: object
    required:
    - additionalServices
    - cancel
    - editPassengers
    - evaluate
    - pay
    - payRemaining
    - printInvoice
    - printTicket
    - rebook
    - sentToMail
    - showDetail
    - storno
    properties:
      showDetail:
        type: boolean
        default: false
      pay:
        type: boolean
        default: false
      payRemaining:
        type: boolean
        default: false
      evaluate:
        type: boolean
        default: false
      cancel:
        type: boolean
        default: false
      storno:
        type: boolean
        default: false
      rebook:
        type: boolean
        default: false
      editPassengers:
        type: boolean
        default: false
      additionalServices:
        type: boolean
        default: false
      sentToMail:
        type: boolean
        default: false
      printTicket:
        type: boolean
        default: false
      printInvoice:
        type: boolean
        default: false
    description: Defines which actions can be executed with current ticket state
  Passenger:
    type: object
    required:
    - tariff
    properties:
      id:
        type: integer
        format: int64
        example: 3895574004
      firstName:
        type: string
        example: First
        description: First name
      surname:
        type: string
        example: Passenger
        description: Surname
      phone:
        type: string
        example: +420777666777
      email:
        type: string
        format: email
        example: first.passenger@email.com
        description: Email are always required after first passenger if not pre-filled in user account (or customer isnt logged in)
      dateOfBirth:
        type: string
        format: date
        example: 1988-07-21
      tariff:
        type: string
        example: REGULAR
      amount:
        type: number
        example: 100.0
        description: Basic price (ticket purchase) for tariff set on ticket with ticket currency (doesnt count with discounts)
      moneyBack:
        type: number
        example: 90.0
        description: Final amount for passenger which will be refunded if canceled.
  PassengerRequest:
    type: object
    required:
    - tariff
    properties:
      firstName:
        type: string
        example: First
        description: First name
      surname:
        type: string
        example: Passenger
        description: Surname
      phone:
        type: string
        example: +420777666777
      email:
        type: string
        format: email
        example: first.passenger@email.com
      dateOfBirth:
        type: string
        format: date
        example: 1978-07-21
      tariff:
        type: string
        example: REGULAR
  PutRatingRequest:
    type: object
    required:
    - forms
    properties:
      forms:
        type: array
        items:
          $ref: '#/definitions/SectionPutRatingRequest'
  SectionPutRatingRequest:
    type: object
    required:
    - form
    - sectionId
    properties:
      sectionId:
        type: integer
        format: int64
      form:
        $ref: '#/definitions/RatingAnsweredFormData'
  RatingAnsweredFormData:
    type: object
    required:
    - fields
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/RatingAnsweredFormField'
    description: Shows already filled rating form.
  RatingAnsweredFormField:
    type: object
    required:
    - questionId
    properties:
      questionId:
        type: integer
        example: 3333
      answerId:
        type: integer
        example: 123456
      text:
        type: string
        example: Answer text
  RatingFormData:
    type: object
    required:
    - answers
    - fields
    - sectionId
    properties:
      sectionId:
        type: integer
        format: int64
      answers:
        $ref: '#/definitions/RatingAnsweredFormData'
      fields:
        type: array
        items:
          $ref: '#/definitions/FormQuestion'
    description: Rating form description + so far filled questions
  FormQuestion:
    type: object
    required:
    - questionId
    - text
    - type
    properties:
      questionId:
        type: integer
        example: 3333
        description: 'Question identifier. If empty form wont be send to server during saving (for example: static elements without customer entry)'
      type:
        $ref: '#/definitions/FormQuestionType'
      text:
        type: string
        example: How would you rate board crew attitude?
        description: Qustion title, text paragraph or form title
      watermark:
        type: string
        example: Your comment to crew work
        description: Text fields watermark
      options:
        type: array
        description: List of options (only if there is select option type)
        items:
          $ref: '#/definitions/FormAnswer'
  FormQuestionType:
    type: string
    description: |
      * `MULTI_COMBO` - "Multiple available answer options"
      * `TEXT` - "Question with open answer"
      * `RADIO_BUTTON` - "Only one answer choice is available"
      * `CHECKBOX` - boolean true/false
      * `HEADER` - "Special type, isnt question really, contain text which we want to show customer"
    enum:
    - MULTI_COMBO
    - TEXT
    - RADIO_BUTTON
    - CHECKBOX
    - HEADER
  FormAnswer:
    type: object
    required:
    - text
    properties:
      text:
        type: string
        example: Very satisfied
        description: Text of pre-filled answers
      answerId:
        type: integer
        example: 123456
        description: Answer code sended to server which isnt shown to user.
  CreateTicketResponseRegistered:
    type: object
    required:
    - tickets
    properties:
      tickets:
        type: array
        items:
          $ref: '#/definitions/Ticket'
  CreateTicketResponseUnregistered:
    type: object
    required:
    - tickets
    - token
    properties:
      token:
        type: string
        example: 5348c0b3-e02b-4308-bf56-c8fc991a982e
        description: Newly created user account token which is linked to ticket(s)
      tickets:
        type: array
        items:
          $ref: '#/definitions/Ticket'
  Ticket:
    type: object
    required:
    - conditions
    - currency
    - customerActions
    - id
    - passengersInfo
    - price
    - routeId
    - routeSections
    - seatClassKey
    - state
    - unpaid
    properties:
      id:
        type: integer
        format: int64
        example: 3895569002
        description: ID of the ticket
      routeId:
        type: string
        example: 3804436614,3862631913
        description: route id (section0.id,section1.id, ... sectionx.id)
      price:
        type: number
        example: 540.0
        description: Final price for ticket, addons and insurance etc.
      unpaid:
        type: number
        example: 0.0
        description: Final price to be paid
      currency:
        $ref: '#/definitions/Currency'
      state:
        $ref: '#/definitions/TicketState'
      seatClassKey:
        type: string
        example: C1
      conditions:
        $ref: '#/definitions/PriceConditions'
      expirationDate:
        type: string
        format: date-time
        example: 2018-02-17T00:50:00.000+02:00
      expirateAt:
        $ref: '#/definitions/TimePeriod'
      customerNotifications:
        type: array
        items:
          type: string
          example: Line is servised by partner carrier bus MT-Lines
      customerActions:
        $ref: '#/definitions/CustomerActions'
      routeSections:
        type: array
        items:
          $ref: '#/definitions/TicketSection'
      addons:
        type: array
        items:
          $ref: '#/definitions/OrderedAddon'
      paymentId:
        type: integer
        format: int64
        example: 3951798008
        description: 'Payment ID (groupTransactionID). Available only with paid ticket. Necessary for further action with ticket (for example: print invoice)'
      bills:
        type: array
        items:
          $ref: '#/definitions/TicketBill'
      usedCodeDiscount:
        $ref: '#/definitions/CodeDiscount'
      usedPercentualDiscounts:
        type: array
        description: Applied procentual discounts
        items:
          $ref: '#/definitions/PercentualDiscount'
      transfersInfo:
        $ref: '#/definitions/TransfersInfo'
      surcharge:
        type: number
        example: 100.0
        description: Total count of all irreversible surcharges in current currency
      cancelChargeSum:
        type: number
        example: 499.0
        description: Total count of all charges and surcharge
      cancelMoneyBackSum:
        type: number
        example: 41.0
        description: Total count of reversible amounts
      passengersInfo:
        $ref: '#/definitions/PassengersInfo'
      delay:
        type: string
        example: 00:15 h
        description: Textual information about the first delay on the route
      travelTime:
        type: string
        example: 01:10 h
        description: Textual information about the travel time on a given section
      estimatedArrivalTime:
        type: string
        format: date-time
        example: 2018-02-17T00:50:00.000+02:00
        description: Estimated arrival date time (arrival + delay)
    description: expirationDate is date-time value states when ticket expires. ExpiresAt states how many days, hours and minutes left to ticket expiration.
  TimeTicket:
    type: object
    required:
    - conditions
    - customerActions
    - id
    - seatClass
    - state
    - station1Id
    - station2Id
    - tariff
    - type
    - validFrom
    properties:
      id:
        type: integer
        format: int64
        example: 3895569002
        description: ID of the time ticket
      accountCode:
        type: integer
        format: int64
        example: 3895569002
        description: Account code of the time ticket owner
      station1Id:
        type: integer
        format: int64
        example: 3895569002
        description: ID of the station one
      station2Id:
        type: integer
        format: int64
        example: 3895569002
        description: ID of the station two
      name:
        type: string
        example: Petr
        description: Name of the ticket owner
      surname:
        type: string
        example: Novak
        description: Surname of the ticket owner
      tariff:
        $ref: '#/definitions/Tariff'
      type:
        $ref: '#/definitions/TimeTicketType'
      state:
        $ref: '#/definitions/TicketState'
      seatClass:
        $ref: '#/definitions/SeatClass'
      validFrom:
        type: string
        format: date-time
        example: 2018-02-17T00:50:00.000+02:00
      validTo:
        type: string
        format: date-time
        example: 2018-02-17T00:50:00.000+02:00
      customerActions:
        $ref: '#/definitions/TimeTicketCustomerAction'
      conditions:
        $ref: '#/definitions/PriceConditions'
      bills:
        type: array
        items:
          $ref: '#/definitions/TimeTicketBill'
    description: TimeTicket
  QrCodeTicket:
    type: object
    properties:
      qrCodeVersion:
        type: integer
        example: 2
        description: Version of QR code
      qrCodeTicketType:
        $ref: '#/definitions/QrCodeTicketType'
      ticketId:
        type: integer
        format: int64
        description: If there is used discount there is as well ticket ID which is linked to it.
  QrCodeTicketType:
    type: string
    description: Ticket type of QR code
    example: RJ_SEAT
    enum:
    - RJ_SEAT
  PassengersInfo:
    type: object
    required:
    - changeCharge
    - firstPassengerData
    - otherPassengersData
    - passengers
    properties:
      passengers:
        type: array
        items:
          $ref: '#/definitions/Passenger'
      firstPassengerData:
        type: array
        description: Required fields for 1st passenger (returns only if tickets is editable)
        items:
          $ref: '#/definitions/PersonalDataType'
      otherPassengersData:
        type: array
        description: Required fields for all others passengers (returns only if tickets is editable)
        items:
          $ref: '#/definitions/PersonalDataType'
      changeCharge:
        type: number
        example: 200.0
        description: Administrative charge for user information change (in ticket currency)
    description: Summary of all informations needed for work with passengers.
  TicketSection:
    type: object
    required:
    - fixedSeatReservation
    - section
    - selectedSeats
    properties:
      section:
        $ref: '#/definitions/Section'
      fixedSeatReservation:
        type: boolean
        description: TRUE => seat reservation; FALSE => seat choosed while boarding
      selectedSeats:
        type: array
        items:
          $ref: '#/definitions/SelectedSeat'
      vehicles:
        type: array
        items:
          $ref: '#/definitions/Vehicle'
  TicketBill:
    type: object
    required:
    - amount
    - currency
    - label
    properties:
      amount:
        type: number
      currency:
        $ref: '#/definitions/Currency'
      label:
        type: string
  Layout:
    type: object
    properties:
      header:
        type: array
        items:
          $ref: '#/definitions/Layout_header'
      footer:
        $ref: '#/definitions/Layout_footer'
  News:
    type: object
    properties:
      discounts:
        type: array
        items:
          $ref: '#/definitions/News_discounts'
      promotions:
        type: array
        items:
          $ref: '#/definitions/News_promotions'
      news:
        type: array
        items:
          $ref: '#/definitions/News_news'
  SeatClass:
    type: object
    required:
    - description
    - key
    - title
    properties:
      key:
        type: string
        example: C1
        description: enum.name
      title:
        type: string
        example: RELAX
        description: Class title
      description:
        type: string
        example: Full service, open space, large leather seats. Recommended.
        description: Class descriptions.
      imageUrl:
        type: string
        example: https://bustickets.regiojet.com/...img.png
      galleryUrl:
        type: string
        example: https://www.regiojet.com/services/services-on-board-of-trains/
        description: Class photogalery URL
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      accountCode:
        type: string
        example: "8838350718"
        description: Used as account ID for login
      firstName:
        type: string
        example: First
      surname:
        type: string
        example: Passenger
      phoneNumber:
        type: string
        example: +420777222666
      restrictPhoneNumbers:
        type: boolean
        description: Restrict phone number for work with sms.
        default: false
      email:
        type: string
        format: email
        example: first.passenger@gmail.com
      mojeid:
        type: string
      credit:
        type: number
        example: 50.0
        description: Account balance
      creditPrice:
        type: boolean
        description: Difference between registered credit account with price advantage and regular unregistered open account
        default: true
      currency:
        $ref: '#/definitions/Currency'
      defaultTariffKey:
        type: string
        example: REGULAR
        description: Set tariff which would be pre-filled after login
      notifications:
        $ref: '#/definitions/Notifications'
      companyInformation:
        type: boolean
        default: false
      company:
        $ref: '#/definitions/Company'
      conditionsAcceptance:
        type: boolean
        description: Acceptance of transport conditions and personal data protection
        default: false
      employeeNumber:
        type: integer
        example: 11111
        description: NULL for normal customer, internal number for Regiojet employee
  ChangeUserRequest:
    type: object
    required:
    - companyInformation
    - defaultTariffKey
    - notifications
    properties:
      phoneNumber:
        type: string
        example: +420111222333
      restrictPhoneNumbers:
        type: boolean
        default: false
      companyInformation:
        type: boolean
      company:
        $ref: '#/definitions/Company'
      defaultTariffKey:
        type: string
      notifications:
        $ref: '#/definitions/Notifications'
  Company:
    type: object
    required:
    - address
    - companyName
    - registrationNumber
    properties:
      companyName:
        type: string
        example: RegioJet
      address:
        type: string
        example: N�m�st� Svobody 17, 602 00 Brno
      registrationNumber:
        type: string
        example: "25317075"
      vatNumber:
        type: string
        example: CZ25317075
  SuccessResponse:
    type: object
    properties:
      message:
        type: string
        example: OK
      messageFields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
  ErrorResponse:
    type: object
    required:
    - message
    properties:
      message:
        type: string
        example: Error description
        description: Common error/validation message
      errorFields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
  MessageField:
    type: object
    required:
    - key
    - value
    properties:
      key:
        type: string
        example: email
        description: Error/invalid field title
      value:
        type: string
        example: Invalid email format
        description: Error/validation message to current field
  LanguageDictionary:
    type: object
    example:
      booking: Rezervace
      login: P�ihl�sit
      passengers: Po�et osob
      search: Vyhledat
    additionalProperties:
      type: string
  PassengersDataRequest:
    type: object
    required:
    - priceSource
    - seatClass
    - sections
    - tariffs
    properties:
      sections:
        type: array
        items:
          $ref: '#/definitions/SimpleSection'
      tariffs:
        type: array
        items:
          type: string
          example: REGULAR
      seatClass:
        type: string
        example: C1
      priceSource:
        type: string
        example: 3870611089<3088864001-3741302011-3863407000>
        description: Pricing ID - used for confirmation that price, services or conditions werent changed
  CreateTicketRequest:
    type: object
    required:
    - passengers
    - route
    properties:
      route:
        $ref: '#/definitions/CreateTicketRouteRequest'
      selectedAddons:
        type: array
        items:
          $ref: '#/definitions/SelectedAddon'
      passengers:
        type: array
        items:
          $ref: '#/definitions/Passenger'
      codeDiscount:
        type: string
        example: di4.d
        description: Flat rate discount from fare price (does not apply on addons, insurance and charges). Applies first (before percentual discount)
      percentualDiscountIds:
        type: array
        description: Percentual discount from fare price (does not apply on addons, insurance and charges). Applies as seconds (after flat rate discount)
        items:
          type: integer
          format: int64
          example: 30495730405
    description: 'TODO: passenger by m�l m�t p��znak isInsuarence + data...'
  CreateUnregisteredTicketRequest:
    type: object
    required:
    - agreeWithTerms
    - ticketRequests
    properties:
      agreeWithTerms:
        type: boolean
        description: Agree with terms
        default: false
      ticketRequests:
        type: array
        items:
          $ref: '#/definitions/CreateTicketRequest'
      affiliateCode:
        type: string
        example: affcode123456
        description: Optional code of an affiliate partner.
  CreateRegisteredTicketRequest:
    type: object
    required:
    - ticketRequests
    properties:
      ticketRequests:
        type: array
        items:
          $ref: '#/definitions/CreateTicketRequest'
      affiliateCode:
        type: string
        example: affcode123456
        description: Optional code of an affiliate partner.
  CreateTicketRouteRequest:
    type: object
    required:
    - priceSource
    - routeId
    - seatClass
    - sections
    properties:
      routeId:
        type: string
        example: 3804436614,3862631913
        description: route id (section0.id,section1.id, ... sectionx.id)
      seatClass:
        type: string
        example: C1
      priceSource:
        type: string
        example: 3870611089<3088864001-3741302011-3863407000>
        description: Pricing ID - used for confirmation that price, services or conditions werent changed
      actionPrice:
        $ref: '#/definitions/ActionPrice'
      sections:
        type: array
        items:
          $ref: '#/definitions/CreateTicketSectionRequest'
  CreateTicketSectionRequest:
    type: object
    required:
    - section
    properties:
      section:
        $ref: '#/definitions/SimpleSection'
      selectedSeats:
        type: array
        items:
          $ref: '#/definitions/SelectedSeat'
  SimpleSection:
    type: object
    required:
    - fromStationId
    - sectionId
    - toStationId
    properties:
      sectionId:
        type: integer
        format: int64
        example: 3804436614
      fromStationId:
        type: integer
        format: int64
        example: 17797001
        description: Valid station ID (city ID unsupported at this level)
      toStationId:
        type: integer
        format: int64
        example: 10204002
        description: Valid station ID (city ID unsupported at this level)
  PassengersDataResponse:
    type: object
    required:
    - firstPassengerData
    - otherPassengersData
    properties:
      firstPassengerData:
        type: array
        description: Required fields for 1st passenger
        items:
          $ref: '#/definitions/PersonalDataType'
      otherPassengersData:
        type: array
        description: Required fields for all other passengers
        items:
          $ref: '#/definitions/PersonalDataType'
  Vehicle:
    type: object
    required:
    - freeSeats
    - seatClasses
    - vehicleId
    - vehicleNumber
    - vehicleStandardKey
    properties:
      vehicleId:
        type: integer
        format: int64
        example: 3789624138
      code:
        type: string
        description: Vehicle code tag (BUS => SPZ, VAGON => code)
      layoutURL:
        type: string
      horizontalLayoutURL:
        type: string
      type:
        $ref: '#/definitions/VehicleType'
      vehicleStandardKey:
        type: string
        example: YELLOW
        description: Vehicle standard code tag
      services:
        type: array
        description: Supported services icons (wifi, etc.)
        items:
          type: string
          example: wifi
      vehicleNumber:
        type: integer
        example: 7
      seatClasses:
        type: array
        description: Available classes in this vehicle
        items:
          type: string
          example: ""
      notifications:
        type: array
        example:
        - You've chosen seat on line where you wont be accompanied by steward(ess). Bus driver will ensure check-in, safe and nothing disturbed travel. Connection will be operated by air-conditioned bus with toilet and services like wifi, newspapers or fun portal (depend on bus type).
        description: Additional informations relating to whole vehicle. These informations are visible, but wont requiring confirmation.
        items:
          type: string
      freeSeats:
        type: array
        items:
          $ref: '#/definitions/Seat'
  SelectedSeat:
    type: object
    required:
    - seatIndex
    - sectionId
    - vehicleNumber
    properties:
      sectionId:
        type: integer
        format: int64
        example: 3789624138
      vehicleNumber:
        type: integer
        example: 7
      seatIndex:
        type: integer
        example: 15
  Token:
    type: object
    properties:
      token:
        type: string
  MojeIdLogin:
    type: object
    required:
    - mojeIdToken
    properties:
      mojeIdToken:
        type: string
  UnregisteredLogin:
    type: object
    required:
    - accountCode
    properties:
      accountCode:
        type: string
  RegisteredLogin:
    type: object
    required:
    - accountCode
    - password
    properties:
      accountCode:
        type: string
      password:
        type: string
  TicketState:
    type: string
    description: |
      * `USED` - driven ticket
      * `VALID` - Valid and paid ticket
      * `UNPAID` - Unpaid reservation
      * `CANCELED` - Canceled by user (soft-booking)
      * `DELETED` - Canceled by user (hard-booking)
      * `EXPIRED` - Expirated soft-booking which cant be bought anymore
      * `TO_BE_EXPIRED` - Expirated soft-booking which werent be able to finish by system
    enum:
    - USED
    - VALID
    - UNPAID
    - CANCELED
    - DELETED
    - EXPIRED
    - TO_BE_EXPIRED
  SignupRegisteredAccountRequest:
    type: object
    required:
    - agreeWithTerms
    - currency
    - defaultTariff
    - email
    - firstName
    - notifications
    - password
    - surname
    properties:
      firstName:
        type: string
        example: First
      surname:
        type: string
        example: Passenger
      phoneNumber:
        type: string
        example: "420777111333"
      restrictPhoneNumbers:
        type: boolean
        description: Restrict phone number for work with sms
        default: false
      email:
        type: string
        format: email
        example: first.passenger@gmail.com
      mojeid:
        type: string
      companyInformation:
        type: boolean
        default: false
      company:
        $ref: '#/definitions/Company'
      defaultTariff:
        type: string
        example: REGULAR
      currency:
        $ref: '#/definitions/Currency'
      password:
        type: string
      notifications:
        $ref: '#/definitions/Notifications'
      agreeWithTerms:
        type: boolean
        description: Agree with terms
        default: false
  SimpleRegisteredAccountRequest:
    type: object
    required:
    - agreeWithTerms
    - email
    - firstName
    - notifications
    - password
    - surname
    properties:
      firstName:
        type: string
        example: First
      surname:
        type: string
        example: Passenger
      email:
        type: string
        format: email
        example: first.passenger@gmail.com
      phoneNumber:
        type: string
        example: "420777111333"
      password:
        type: string
      notifications:
        $ref: '#/definitions/Notifications'
      agreeWithTerms:
        type: boolean
        description: Agree with terms
        default: false
  Notifications:
    type: object
    required:
    - newsletter
    - reservationChange
    - routeRatingSurvey
    properties:
      newsletter:
        type: boolean
        default: false
      reservationChange:
        type: boolean
        default: false
      routeRatingSurvey:
        type: boolean
        default: false
  PaymentsMethodsRequest:
    type: object
    required:
    - ticketIds
    properties:
      ticketIds:
        type: array
        items:
          type: integer
          format: int64
  AddGiftCertificateRequest:
    type: object
    required:
    - certificate
    - email
    properties:
      certificate:
        type: string
        example: D3PS1F
      email:
        type: string
        format: email
        example: first.passenger@gmail.com
  ChargeRequest:
    type: object
    required:
    - ticketIds
    properties:
      ticketIds:
        type: array
        items:
          type: integer
          format: int64
  ChargeResponse:
    type: object
    required:
    - amount
    - currency
    properties:
      amount:
        type: number
        example: 335.0
      currency:
        $ref: '#/definitions/Currency'
  VerifyGiftCertificateRequest:
    type: object
    required:
    - certificateCode
    properties:
      certificateCode:
        type: string
        example: D3PS1F
  GiftCertificateInfo:
    type: object
    required:
    - certificateCode
    - state
    properties:
      certificateCode:
        type: string
        example: D3PS1F
      amount:
        type: number
        example: 200.0
      currency:
        $ref: '#/definitions/Currency'
      creationDate:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date-time
      state:
        $ref: '#/definitions/GiftCertificateState'
  GiftCertificateState:
    type: string
    example: VALID
    enum:
    - VALID
    - UNPAID
    - EXPIRED
    - USED
    - NOT_EXISTS
  ForgottenPasswordRequest:
    type: object
    required:
    - accountCode
    - email
    properties:
      accountCode:
        type: string
        example: "1234567890"
      email:
        type: string
        format: email
        example: first.passenger@email.com
      correlationId:
        type: string
        example: mobile
        description: Attribute value will be added into URL address as path param
  ResetPasswordRequest:
    type: object
    required:
    - newPassword
    properties:
      newPassword:
        type: string
  ChangePasswordRequest:
    type: object
    required:
    - newPassword
    - oldPassword
    properties:
      oldPassword:
        type: string
        description: Old password
      newPassword:
        type: string
        description: New password
        minLength: 5
  ContactFormRequest:
    type: object
    required:
    - customerEmail
    - customerName
    - message
    - title
    properties:
      customerName:
        type: string
      customerEmail:
        type: string
        format: email
      title:
        type: string
      message:
        type: string
  TicketEmailRequest:
    type: object
    required:
    - email
    properties:
      email:
        type: string
        format: email
  Discount:
    type: object
    required:
    - id
    - passengers
    - percentage
    - state
    properties:
      id:
        type: integer
        format: int64
        example: 42
      percentage:
        type: integer
        example: 10
        description: Percentual discount size
      passengers:
        type: integer
        example: 3
        description: Maximal number of passengers
      fromLocation:
        type: string
        example: Prague
        description: Default country/city/station translation
      toLocation:
        type: string
        example: Brno
        description: Default arrival country/city/station translations
      dateFrom:
        type: string
        format: date-time
      dateTo:
        type: string
        format: date-time
      state:
        $ref: '#/definitions/DiscountState'
      ticketId:
        type: integer
        format: int64
        description: If there is used discount there is as well ticket ID which is linked to it.
  VerifyDiscountRequest:
    type: object
    required:
    - actionPrice
    - passengers
    - route
    - ticketPrice
    properties:
      ticketPrice:
        type: number
        example: 100.0
        description: Original ticket price (before applied discount)
      route:
        $ref: '#/definitions/CreateTicketRouteRequest'
      actionPrice:
        $ref: '#/definitions/ActionPrice'
      passengers:
        type: array
        items:
          $ref: '#/definitions/Passenger'
  VerifiedDiscountResponse:
    type: object
    required:
    - amount
    - currency
    - discountedTicketPrice
    properties:
      amount:
        type: number
        example: 100.0
        description: Discount sum (states how much will be ticket cheaper after applying discount)
      currency:
        $ref: '#/definitions/Currency'
      discountedTicketPrice:
        type: number
        example: 200.0
        description: Original price after applying discount
  OrderedAddon:
    type: object
    required:
    - conditions
    - currency
    - description
    - iconUrl
    - id
    - name
    - price
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Ski transportation
      description:
        type: string
      iconUrl:
        type: string
      infoUrl:
        type: string
      infoUrlLabel:
        type: string
      price:
        type: number
        example: 150.0
      currency:
        $ref: '#/definitions/Currency'
      conditions:
        $ref: '#/definitions/PriceConditions'
  AvailableAddon:
    type: object
    required:
    - addonId
    - conditions
    - currency
    - description
    - iconUrl
    - name
    - price
    properties:
      addonId:
        type: integer
        format: int64
      name:
        type: string
        example: Ski transportation
      description:
        type: string
      iconUrl:
        type: string
      infoUrl:
        type: string
      infoUrlLabel:
        type: string
      price:
        type: number
        example: 150.0
      currency:
        $ref: '#/definitions/Currency'
      maxCount:
        type: integer
        example: 5
        description: Maximal amount of current addon in one order. If no limit is set, this addon will be limitless
      conditions:
        $ref: '#/definitions/AvailableAddonConditions'
  AvailableAddonConditions:
    type: object
    required:
    - code
    properties:
      descriptions:
        $ref: '#/definitions/AddonConditionsDescriptions'
      code:
        type: string
        example: AB42CAB42CAB42CAB42CAB42CAB42C5F
        description: Control MD5 hash transformed from content conditions (used for check that user see actual conditions)
  AvailableAddonsRequest:
    type: object
    required:
    - routeSections
    - tariffs
    properties:
      tariffs:
        type: array
        items:
          type: string
          example: REGULAR
      routeSections:
        type: array
        items:
          $ref: '#/definitions/RouteSectionRequest'
      ticketId:
        type: integer
        format: int64
  RouteSectionRequest:
    type: object
    required:
    - arrivalStationId
    - departureStationId
    - sectionId
    properties:
      sectionId:
        type: integer
        format: int64
        example: 3952652431
      departureStationId:
        type: integer
        format: int64
        example: 10204003
      arrivalStationId:
        type: integer
        format: int64
        example: 10204002
      selectedSeats:
        type: array
        items:
          $ref: '#/definitions/SelectedSeat'
  CancelTicketRequest:
    type: object
    required:
    - controlHash
    properties:
      controlHash:
        type: string
        example: AB42CAB42CAB42CAB42CAB42CAB42C5F
        description: Hash (MD5) of cancellation terms, agreed on by the customer
      refundToOriginalSource:
        type: boolean
        example: false
        description: TRUE if refund money after ticket cancel should return to original source, otherwise FALSE
  OrderAddonsRequest:
    type: object
    required:
    - selectedAddons
    properties:
      selectedAddons:
        type: array
        items:
          $ref: '#/definitions/SelectedAddon'
  AddonsVerifyRequest:
    type: object
    required:
    - routeSections
    - selectedAddons
    - tariffs
    properties:
      selectedAddons:
        type: array
        items:
          $ref: '#/definitions/SelectedAddon'
      routeSections:
        type: array
        items:
          $ref: '#/definitions/RouteSectionRequest'
      tariffs:
        type: array
        items:
          type: string
          example: REGULAR
      ticketId:
        type: integer
        format: int64
  SelectedAddon:
    type: object
    required:
    - addonId
    - conditionsHash
    - count
    - currency
    - price
    properties:
      addonId:
        type: integer
        format: int64
      count:
        type: integer
        example: 3
      price:
        type: number
      currency:
        $ref: '#/definitions/Currency'
      conditionsHash:
        type: string
        example: AB42CAB42CAB42CAB42CAB42CAB42C5F
        description: Hash (MD5) of cancellation terms, agreed on by the customer
  Timetable:
    type: object
    required:
    - connectionId
    - fromCityName
    - stations
    - toCityName
    properties:
      connectionId:
        type: integer
        format: int64
        description: Connection ID
      fromCityName:
        type: string
        example: Prague
        description: Departure city
      toCityName:
        type: string
        example: Brno
        description: Arrival city
      stations:
        type: array
        description: Individual stations (including metadata) sort according to order which connection builds.
        items:
          $ref: '#/definitions/TimetableStation'
  TimetableStation:
    type: object
    required:
    - stationId
    properties:
      stationId:
        type: integer
        format: int64
        example: 10204003
        description: Station ID used for search in locations
      departure:
        type: string
        format: time
        example: 9:45
        description: Planned station departure time (1st station in order does not have arrival time)
      arrival:
        type: string
        format: time
        example: 10:00
        description: Planned station arrival time (1st station in order does not have arrival time)
      platform:
        type: string
        example: ""
        description: Platform
  TransfersInfo:
    type: object
    required:
    - info
    - transfers
    properties:
      info:
        type: string
        example: Connections planned as follow-up in event of delay there can happen re-reservation to follow-up connection or refund money for unused part of route
        description: Accompanying informations about transfers
      transfers:
        type: array
        items:
          $ref: '#/definitions/Transfer'
  Transfer:
    type: object
    required:
    - calculatedTransferTime
    - fromStationId
    - toStationId
    - type
    properties:
      fromStationId:
        type: integer
        format: int64
        example: 10204003
        description: Station ID from which customer needs to transfer
      toStationId:
        type: integer
        format: int64
        example: 372825000
        description: Station ID to which customer needs to transfer
      type:
        $ref: '#/definitions/TransferType'
      calculatedTransferTime:
        $ref: '#/definitions/TimePeriod'
      determinedTransferTime:
        $ref: '#/definitions/TimePeriod'
      description:
        type: string
        example: Bus station can be found right opossite train station. Station is marked with sign Autobusov� stanica. Go after yellow RegioJet buses which leaves from platform number 21.
        description: Transfer specification
    description: Informations about individual transfers (transfer order coincides with individual section order => 1st transfer is between 1st and 2nd section...). calculatedTransferTime is calculated tranfer time in minutes (departure time - arrival time), determinedTransferTime is used time in minutes needed for transfer.
  TransferType:
    type: string
    description: |
      * `NONE` - Transfer between platforms within one station
      * `WALKING` - Transfer by walk
      * `PUBLIC_TRANSPORT` - Public transportation transfer
    enum:
    - NONE
    - WALKING
    - PUBLIC_TRANSPORT
  PersonalDataType:
    type: string
    enum:
    - FIRST_NAME
    - SURNAME
    - BIRTHDAY
    - EMAIL
    - PHONE
    - ZIP_CODE
    - PERSONAL_NUMBER
    - STREET
    - HOUSE_NUMBER
    - CITY
  PrintInvoicesRequest:
    type: object
    required:
    - invoices
    properties:
      invoices:
        type: array
        items:
          type: integer
          format: int64
          description: groupTransactionID
  TimePeriod:
    type: object
    properties:
      days:
        type: integer
        example: 10
        description: Number of days
      hours:
        type: integer
        example: 23
        description: Number of hours
      minutes:
        type: integer
        example: 54
        description: Number of minutes
  CodeDiscount:
    type: object
    required:
    - code
    - discount
    - id
    properties:
      id:
        type: integer
        format: int64
        example: 304959504432
        description: Flat rate discount ID
      code:
        type: string
        example: E4l.d
        description: Five-digit discount code
      discount:
        type: number
        example: 100.0
        description: Flat rate discount sum in ticket currency
    description: Flat rate discount
  PercentualDiscount:
    type: object
    required:
    - amount
    - id
    - passengers
    - percentage
    properties:
      id:
        type: integer
        format: int64
        example: 42
      percentage:
        type: integer
        example: 10
        description: Size of a percentual discount
      amount:
        type: number
        example: 1250.0
        description: Discount sum in account currency
      passengers:
        type: integer
        example: 3
        description: Maximal number of passengers
      fromLocation:
        type: string
        example: Prague
        description: Default departure country/city/station translations
      toLocation:
        type: string
        example: Brno
        description: Default arrival country/city/station translations
      dateFrom:
        type: string
        format: date-time
      dateTo:
        type: string
        format: date-time
    description: Percentual discount
  DiscountState:
    type: string
    description: |
      * `VALID` - Valid discount
      * `USED` - Invalid (used) discount
      * `EXPIRED` - Invalid (expired) discount
    enum:
    - VALID
    - USED
    - EXPIRED
  PassengerChangeResponse:
    type: object
    properties:
      charge:
        type: number
        example: 200.0
        description: User information change charge (in ticket currency)
    description: Result of customer change request
  AddonConditionsDescriptions:
    type: object
    properties:
      cancel:
        type: string
        example: 'More than 15 minutes before departure: 0 %, less than 15 minutes: cannot be canceled'
        description: Cancel charge
      rebook:
        type: string
        example: 'More than 15 minutes before departure: cancel for 0 CZK, less than 15 minutes: cannot be re-reservated'
        description: Change of reservation
      expiration:
        type: string
        example: 3 minutes (18.12.17 11:32 SE�)
        description: Payment expiration
    description: Text expression of multiple condition types linked to PriceConditions
  RouteSeatsResponse:
    type: object
    required:
    - fixedSeatReservation
    - sectionId
    properties:
      sectionId:
        type: integer
        format: int64
        example: 3804436614
      fixedSeatReservation:
        type: boolean
        description: TRUE => seat reservation; FALSE => seat choosed while boarding
      vehicles:
        type: array
        items:
          $ref: '#/definitions/Vehicle'
      selectedSeats:
        type: array
        items:
          $ref: '#/definitions/SelectedSeat'
  DeletePassengerRequest:
    type: object
    required:
    - refundToOriginalSource
    - seats
    properties:
      seats:
        type: array
        description: List of seats which is about to be canceled. Reservation in non-seat-reservation connection isnt included in this list.
        items:
          $ref: '#/definitions/SelectedSeat'
      refundToOriginalSource:
        type: boolean
        example: false
  Carrier:
    type: object
    required:
    - carrierId
    - carrierInfo
    properties:
      carrierId:
        type: integer
        format: int64
      carrierInfo:
        type: string
        example: 'REGIOJET a.s., I�O: 47231271, DI�: SK2023157763, www.regiojet.sk, +421220502020, p�epravn� podm�nky: https://www.regiojet.cz/dokumenty/prepravni-rad/prepravni_rad_autobus-regiojet-sk.pdf'
        description: Informace o dopravci
  ArrivalDepartureConnection:
    type: object
    properties:
      label:
        type: string
      number:
        type: string
      delay:
        type: integer
        example: 15
        description: Information about the delay in minutes on a given connection
      virtual:
        type: boolean
      vehicleCategory:
        type: string
        enum:
        - COACH
        - AIRCRAFT
        - RAIL_CAR
      freeSeatsCount:
        type: integer
      connectionStations:
        type: array
        description: Individual stations (including metadata) sort according to order which connection builds.
        items:
          $ref: '#/definitions/ArrivalDepartureConnectionStation'
  ArrivalDepartureConnectionStation:
    type: object
    required:
    - stationId
    properties:
      stationId:
        type: integer
        format: int64
        example: 10204003
        description: Station ID used for search in locations
      arrival:
        type: string
        format: time
        example: 10:00
        description: Planned station arrival time (1st station in order does not have arrival time)
      departure:
        type: string
        format: time
        example: 9:45
        description: Planned station departure time (1st station in order does not have arrival time)
      platform:
        type: string
        example: ""
        description: Platform
      departingStation:
        type: boolean
        description: Is departing station?
  TimeTicketType:
    type: string
    enum:
    - FLEX
    - DAY
    - WEEK
    - MONTH
  TimeTicketCustomerAction:
    type: object
    required:
    - cancel
    - pay
    - payRemaining
    - printInvoice
    - printTicket
    - sentToMail
    - showDetail
    - showQr
    - storno
    properties:
      showDetail:
        type: boolean
        default: false
      pay:
        type: boolean
        default: false
      payRemaining:
        type: boolean
        default: false
      cancel:
        type: boolean
        default: false
      storno:
        type: boolean
        default: false
      sentToMail:
        type: boolean
        default: false
      printTicket:
        type: boolean
        default: false
      printInvoice:
        type: boolean
        default: false
      showQr:
        type: boolean
        default: false
    description: Defines which actions can be executed with current time ticket state
  TimeTicketBill:
    type: object
    required:
    - amount
    - currency
    - label
    properties:
      amount:
        type: number
      currency:
        $ref: '#/definitions/Currency'
      label:
        type: string
  PaymentTicketRequest:
    type: object
    required:
    - id
    - type
    properties:
      id:
        type: integer
        format: int64
        example: 20394859403
      type:
        $ref: '#/definitions/PaymentTicketType'
  PaymentTicketType:
    type: string
    enum:
    - REGULAR_TICKET
    - TIME_TICKET
  TimeTicketCheckinInfo:
    type: object
    required:
    - accountCode
    - message
    - nameAndSurname
    - seatClassCode
    - state
    - tariff
    - timeTicketId
    properties:
      message:
        type: string
        example: Checked in
        description: Response message.
      accountCode:
        type: string
        example: "123456789"
        description: Client account code which represents number of ticket.
      timeTicketId:
        type: integer
        format: int64
        example: 123456789
        description: Identifier of the time ticket.
      state:
        $ref: '#/definitions/TicketState'
      fromStationId:
        type: integer
        format: int64
        example: 10204003
        description: Identifier of the departure station.
      toStationId:
        type: integer
        format: int64
        example: 10204002
        description: Identifier of the arrival station.
      tariff:
        $ref: '#/definitions/Tariff'
      nameAndSurname:
        type: string
        description: Name and surname of passenger.
      seatClassCode:
        $ref: '#/definitions/SeatClass'
  TimeTicketPrice:
    type: object
    required:
    - price
    - seatClassKey
    properties:
      seatClassKey:
        type: string
        example: C1
        description: SeatClass enum.name
      price:
        type: number
        example: 145.0
        description: Time ticket price for seatClass in requested currency
    description: Time ticket price
  TimeTicketsCheckinRequest:
    type: object
    required:
    - connectionID
    - stationID
    - time
    properties:
      connectionID:
        type: integer
        format: int64
        example: 10204003
        description: Identifier of the connection.
      stationID:
        type: integer
        format: int64
        example: 10204003
        description: Identifier of the station.
      time:
        type: string
        format: date-time
        example: 2012-04-23T18:25:43.511Z
        description: DateTime
    description: Request for the price of transportation.
  inline_response_200:
    type: object
    properties:
      token:
        type: string
  Change Mojeid:
    type: object
    required:
    - mojeid
    properties:
      mojeid:
        type: boolean
  Layout_header:
    type: object
    properties:
      text:
        type: string
      link:
        type: string
  Layout_footer_paymentMethods:
    type: object
    properties:
      text:
        type: string
      imageURL:
        type: string
  Layout_footer_formURL:
    type: object
    properties:
      text:
        type: string
      label:
        type: string
      link:
        type: string
  Layout_footer:
    type: object
    properties:
      paymentMethods:
        type: array
        items:
          $ref: '#/definitions/Layout_footer_paymentMethods'
      formURL:
        $ref: '#/definitions/Layout_footer_formURL'
      phone:
        type: string
      email:
        type: string
        format: email
  News_discounts:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      button:
        $ref: '#/definitions/Layout_header'
      imageURL:
        type: string
  News_promotions:
    type: object
    properties:
      title:
        type: string
      imageURL:
        type: string
      link:
        type: string
  News_news:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      imageURL:
        type: string
      link:
        type: string
parameters:
  xLang:
    name: X-Lang
    in: header
    description: |
      The language into which to localise the response. It is not an ISO country code, even though some values are the same. Possible values are

      - `cs` (Czech)
      - `sk` (Slovak)
      - `de` (German)
      - `hu` (Hungarian)
      - `fr` (French)
      - `es` (Spanish)
      - `ru` (Russian)
      - `ua` (Ukrainian)
      - `zh` (Chinese)
      - `en` (English)

      Defaults to "en" on any other value. All endpoints accept this parameter, though the one for translations (/consts/translations/{lang}) ingores it and uses the language found in path instead.
    required: false
    type: string
    default: en
  xCurrency:
    name: X-Currency
    in: header
    description: Monetary unit to be used in responses. Use either "CZK" for Czech Crown, or "EUR" for Euro. Defaults to "EUR" on any other value.
    required: false
    type: string
    default: EUR
  xBodyHash:
    name: X-Body-Hash
    in: header
    description: Hash of the request body HMAC(SHA-3-512(body), secretKey).
    required: false
    type: string
  xReCaptchaToken:
    name: X-ReCaptcha-Token
    in: header
    description: Token (hash) provided Google ReCaptcha v3.
    required: false
    type: string
  ticketId:
    name: ticketId
    in: path
    description: ID of the ticket with which to perform the given action (print, cancel, rate, etc.)
    required: true
    type: integer
    format: int64
  timeTicketId:
    name: timeTicketId
    in: path
    description: ID of the timeTicket with which to perform the given action (print, cancel, rate, etc.)
    required: true
    type: integer
    format: int64
  accountCode:
    name: accountCode
    in: path
    description: Text code identifying a customer's account.
    required: true
    type: string
  routeId:
    name: routeId
    in: path
    description: 'ID of the route that contains IDs of sections separed by , (example: section0.id,section1.id, ... sectionx.id)'
    required: true
    type: string
  stationId:
    name: stationId
    in: path
    description: ID of the station
    required: true
    type: integer
    format: int64
responses:
  "200":
    description: Success
    schema:
      $ref: '#/definitions/SuccessResponse'
  "201":
    description: Successfully created
    schema:
      $ref: '#/definitions/SuccessResponse'
  "400":
    description: Bad Request
    schema:
      $ref: '#/definitions/ErrorResponse'
  "401":
    description: Unauthorized (invalid token or credentials)
    schema:
      $ref: '#/definitions/ErrorResponse'
  "403":
    description: Permissions denied
    schema:
      $ref: '#/definitions/ErrorResponse'
